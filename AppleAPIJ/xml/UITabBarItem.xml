<api>
 <title>UITabBarItem</title>
 <description>An item in a tab bar.</description>
 <overview>
 <description>A tab bar operates strictly in radio mode, where one item is selected at a time—tapping a tab bar item toggles the view above the tab bar. You can also specify a badge value on the tab bar item for adding additional visual information—for example, the Messages app uses a badge on the item to show the number of new messages. This class also provides a number of system defaults for creating items.</description>
 <sub_overview>
 <name>Customizing Appearance</name>
 <description>In iOS v5.0 and later, you can customize the appearance of tab bars by setting item label text attributes using appearance selectors declared by UIBarItem. You can also use the methods listed in Customizing Appearance. You can customize the appearance of all tab bar items using the appearance proxy (for example, [UITabBarItem appearance]), or just of a single tab bar item. By default, unselected and selected images are automatically created from the alpha values in the source images. To prevent system coloring, provide images with UIImage.RenderingMode.alwaysOriginal. For more information about appearance and behavior configuration, see Tab Bars.</description>
 </sub_overview>
 </overview>
 <topics>
 <topic>
 <title>Initializing an Item</title>
 <method>
 <name>init(tabBarSystemItem: UITabBarItem.SystemItem, tag: Int)</name>
 <description>Creates and returns a new item containing the specified system item.</description>
 </method>
 <method>
 <name>init(title: String?, image: UIImage?, tag: Int)</name>
 <description>Creates and returns a new item using the specified properties.</description>
 </method>
 <method>
 <name>init(title: String?, image: UIImage?, selectedImage: UIImage?)</name>
 <description>Creates and returns a new item with the specified title, unselected image, and selected image.</description>
 </method>
 <method>
 <name>init()</name>
 <description>Initializes the tab bar item to its default state.</description>
 </method>
 <method>
 <name>init?(coder: NSCoder)</name>
 </method>
 <method>
 <name>enum UITabBarItem.SystemItem</name>
 <description>System items that can be used on a tab bar.</description>
 </method>
 </topic>
 <topic>
 <title>Customizing Appearance</title>
 <method>
 <name>var selectedImage: UIImage?</name>
 <description>The image displayed when the tab bar item is selected.</description>
 </method>
 <method>
 <name>var titlePositionAdjustment: UIOffset</name>
 <description>The offset to use to adjust the title position.</description>
 </method>
 <method>
 <name>struct UIOffset</name>
 <description>Defines a structure that specifies an amount to offset a position.</description>
 </method>
 </topic>
 <topic>
 <title>Configuring the Badge</title>
 <method>
 <name>var badgeValue: String?</name>
 <description>Text that is displayed in the upper-right corner of the item with a surrounding red oval.</description>
 </method>
 <method>
 <name>var badgeColor: UIColor?</name>
 <description>The background color to apply to the badge.</description>
 </method>
 <method>
 <name>func setBadgeTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)</name>
 <description>Assigns custom text attributes to the badge text.</description>
 </method>
 <method>
 <name>func badgeTextAttributes(for: UIControl.State) -&amp;gt; [NSAttributedString.Key : Any]?</name>
 <description>Retrieves the custom text attributes associated with the item&amp;apos;s badge text.</description>
 </method>
 </topic>
 </topics>
 <relationships>
 <inherits_from>
 <name>UIBarItem</name>
 </inherits_from>
 <conforms_to>
 <name>CVarArg</name>
 <name>Equatable</name>
 <name>Hashable</name>
 <name>UIAccessibilityIdentification</name>
 <name>UISpringLoadedInteractionSupporting</name>
 </conforms_to>
 </relationships>
 <see-also>
 <control>
 <name>class UITabBarController</name>
 <description>A container view controller that manages a radio-style selection interface, where the selection determines which child view controller to display.</description>
 </control>
 <control>
 <name>class UITabBar</name>
 <description>A control that displays one or more buttons in a tab bar for selecting between different subtasks, views, or modes in an app.</description>
 </control>
 </see-also>
 </api>