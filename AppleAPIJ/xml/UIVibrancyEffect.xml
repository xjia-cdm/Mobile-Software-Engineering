<api>
 <title>UIVibrancyEffect</title>
 <description>An object that amplifies and adjusts the color of the content layered behind a visual effect view.</description>
 <overview>
 <description>A vibrancy effect is intended to be used as a subview of or layered on top of a UIVisualEffectView that has been configured with a UIBlurEffect. The use of a vibrancy effect can help the content placed inside the contentView become more vivid.</description>
 </overview>
 <topics>
 <topic>
 <title>Creating a Vibrancy Effect</title>
 <method>
 <name>init(blurEffect: UIBlurEffect)</name>
 <description>Creates a vibrancy effect for a specific blur effect.</description>
 </method>
 <method>
 <name>class func widgetPrimary() -&amp;gt; UIVibrancyEffect</name>
 <description>Creates a vibrancy effect suitable for use with certain supporting text and template images within a widget.</description>
 </method>
 <method>
 <name>class func widgetSecondary() -&amp;gt; UIVibrancyEffect</name>
 <description>Creates a vibrancy effect suitable for indicating the secondary importance or relevance of supporting text and template images within a widget.</description>
 </method>
 <method>
 <name>class func notificationCenter() -&amp;gt; UIVibrancyEffect</name>
 <description>Creates a vibrancy effect for use in Notification Center.</description>
 </method>
 </topic>
 </topics>
 <relationships>
 <inherits_from>
 <name>UIVisualEffect</name>
 </inherits_from>
 <conforms_to>
 <name>CVarArg</name>
 <name>Equatable</name>
 <name>Hashable</name>
 </conforms_to>
 </relationships>
 <see-also>
 <control>
 <name>class UIVisualEffect</name>
 <description>An initializer for visual effect views and blur and vibrancy effect objects.</description>
 </control>
 <control>
 <name>class UIVisualEffectView</name>
 <description>An object that implements some complex visual effects.</description>
 </control>
 <control>
 <name>class UIBlurEffect</name>
 <description>An object that applies a blurring effect to the content layered behind a visual effect view.</description>
 </control>
 </see-also>
 </api>