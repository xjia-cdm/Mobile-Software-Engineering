<api>
 <title>CursorTreeAdapter</title>
 <api-signature>public abstract class CursorTreeAdapter extends BaseExpandableListAdapter implements Filterable</api-signature>
 <inheritance>java.lang.Object ↳ android.widget.BaseExpandableListAdapter ↳ android.widget.CursorTreeAdapter</inheritance>
 <subclasses-direct>ResourceCursorTreeAdapter</subclasses-direct>
 <subclasses-direct-summary>
 <class>
 <name>ResourceCursorTreeAdapter</name>
 <description>A fairly simple ExpandableListAdapter that creates views defined in an XML file.</description>
 </class>
 </subclasses-direct-summary>
 <subclasses-indirect>SimpleCursorTreeAdapter</subclasses-indirect>
 <subclasses-indirect-summary>
 <class>
 <name>SimpleCursorTreeAdapter</name>
 <description>An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file.</description>
 </class>
 </subclasses-indirect-summary>
 <inherited_xml_attributes>
 </inherited_xml_attributes>
 <inherited_constants>
 </inherited_constants>
 <inherited_fields>
 </inherited_fields>
 <inherited_methods>
 <name>android.widget.BaseExpandableListAdapter</name>
 <class>
 <method>
 <return-value>boolean</return-value>
 <name>areAllItemsEnabled()</name>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getChildType(int groupPosition, int childPosition)</name>
 <description>Get the type of child View that will be created by ExpandableListAdapter.getChildView(int, int, boolean, View, ViewGroup) for the specified child item.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getChildTypeCount()</name>
 <description></description>
 </method>
 <method>
 <return-value>long</return-value>
 <name>getCombinedChildId(long groupId, long childId)</name>
 <description>Override this method if you foresee a clash in IDs based on this scheme:</description>
 </method>
 <method>
 <return-value>long</return-value>
 <name>getCombinedGroupId(long groupId)</name>
 <description>Override this method if you foresee a clash in IDs based on this scheme:</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getGroupType(int groupPosition)</name>
 <description>Get the type of group View that will be created by ExpandableListAdapter.getGroupView(int, boolean, View, ViewGroup) .</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getGroupTypeCount()</name>
 <description></description>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>isEmpty()</name>
 <description></description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetChanged()</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetInvalidated()</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>onGroupCollapsed(int groupPosition)</name>
 <description>Called when a group is collapsed.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>onGroupExpanded(int groupPosition)</name>
 <description>Called when a group is expanded.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>registerDataSetObserver(DataSetObserver observer)</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>unregisterDataSetObserver(DataSetObserver observer)</name>
 </method>
 </class>
 <name>java.lang.Object</name>
 <class>
 <method>
 <return-value>Object</return-value>
 <name>clone()</name>
 <description>Creates and returns a copy of this object.</description>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>equals(Object obj)</name>
 <description>Indicates whether some other object is &amp;quot;equal to&amp;quot; this one.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>finalize()</name>
 <description>Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.</description>
 </method>
 <method>
 <return-value>final Class&amp;lt;?&amp;gt;</return-value>
 <name>getClass()</name>
 <description>Returns the runtime class of this Object.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>hashCode()</name>
 <description>Returns a hash code value for the object.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>notify()</name>
 <description>Wakes up a single thread that is waiting on this object&amp;apos;s monitor.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>notifyAll()</name>
 <description>Wakes up all threads that are waiting on this object&amp;apos;s monitor.</description>
 </method>
 <method>
 <return-value>String</return-value>
 <name>toString()</name>
 <description>Returns a string representation of the object.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait(long millis, int nanos)</name>
 <description>Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait(long millis)</name>
 <description>Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait()</name>
 <description>Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.</description>
 </method>
 </class>
 <name>android.widget.ExpandableListAdapter</name>
 <class>
 <method>
 <return-value>abstract boolean</return-value>
 <name>areAllItemsEnabled()</name>
 </method>
 <method>
 <return-value>abstract Object</return-value>
 <name>getChild(int groupPosition, int childPosition)</name>
 <description>Gets the data associated with the given child within the given group.</description>
 </method>
 <method>
 <return-value>abstract long</return-value>
 <name>getChildId(int groupPosition, int childPosition)</name>
 <description>Gets the ID for the given child within the given group.</description>
 </method>
 <method>
 <return-value>abstract View</return-value>
 <name>getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)</name>
 <description>Gets a View that displays the data for the given child within the given group.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getChildrenCount(int groupPosition)</name>
 <description>Gets the number of children in a specified group.</description>
 </method>
 <method>
 <return-value>abstract long</return-value>
 <name>getCombinedChildId(long groupId, long childId)</name>
 <description>Gets an ID for a child that is unique across any item (either group or child) that is in this list.</description>
 </method>
 <method>
 <return-value>abstract long</return-value>
 <name>getCombinedGroupId(long groupId)</name>
 <description>Gets an ID for a group that is unique across any item (either group or child) that is in this list.</description>
 </method>
 <method>
 <return-value>abstract Object</return-value>
 <name>getGroup(int groupPosition)</name>
 <description>Gets the data associated with the given group.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getGroupCount()</name>
 <description>Gets the number of groups.</description>
 </method>
 <method>
 <return-value>abstract long</return-value>
 <name>getGroupId(int groupPosition)</name>
 <description>Gets the ID for the group at the given position.</description>
 </method>
 <method>
 <return-value>abstract View</return-value>
 <name>getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)</name>
 <description>Gets a View that displays the given group.</description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>hasStableIds()</name>
 <description>Indicates whether the child and group IDs are stable across changes to the underlying data.</description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>isChildSelectable(int groupPosition, int childPosition)</name>
 <description>Whether the child at the specified position is selectable.</description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>isEmpty()</name>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>onGroupCollapsed(int groupPosition)</name>
 <description>Called when a group is collapsed.</description>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>onGroupExpanded(int groupPosition)</name>
 <description>Called when a group is expanded.</description>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>registerDataSetObserver(DataSetObserver observer)</name>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>unregisterDataSetObserver(DataSetObserver observer)</name>
 </method>
 </class>
 <name>android.widget.HeterogeneousExpandableList</name>
 <class>
 <method>
 <return-value>abstract int</return-value>
 <name>getChildType(int groupPosition, int childPosition)</name>
 <description>Get the type of child View that will be created by ExpandableListAdapter.getChildView(int, int, boolean, View, ViewGroup) for the specified child item.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getChildTypeCount()</name>
 <description></description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getGroupType(int groupPosition)</name>
 <description>Get the type of group View that will be created by ExpandableListAdapter.getGroupView(int, boolean, View, ViewGroup) .</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getGroupTypeCount()</name>
 <description></description>
 </method>
 </class>
 <name>android.widget.Filterable</name>
 <class>
 <method>
 <return-value>abstract Filter</return-value>
 <name>getFilter()</name>
 <description></description>
 </method>
 </class>
 </inherited_methods>
 <public_constructors>
 <method>
 <name>CursorTreeAdapter(Cursor cursor, Context context)</name>
 <description>Constructor.</description>
 </method>
 <method>
 <name>CursorTreeAdapter(Cursor cursor, Context context, boolean autoRequery)</name>
 <description>Constructor.</description>
 </method>
 </public_constructors>
 <public_methods>
 <method>
 <return-value>void</return-value>
 <name>changeCursor(Cursor cursor)</name>
 </method>
 <method>
 <return-value>String</return-value>
 <name>convertToString(Cursor cursor)</name>
 </method>
 <method>
 <return-value>Cursor</return-value>
 <name>getChild(int groupPosition, int childPosition)</name>
 </method>
 <method>
 <return-value>long</return-value>
 <name>getChildId(int groupPosition, int childPosition)</name>
 </method>
 <method>
 <return-value>View</return-value>
 <name>getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)</name>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getChildrenCount(int groupPosition)</name>
 </method>
 <method>
 <return-value>Cursor</return-value>
 <name>getCursor()</name>
 </method>
 <method>
 <return-value>Filter</return-value>
 <name>getFilter()</name>
 <description></description>
 </method>
 <method>
 <return-value>FilterQueryProvider</return-value>
 <name>getFilterQueryProvider()</name>
 </method>
 <method>
 <return-value>Cursor</return-value>
 <name>getGroup(int groupPosition)</name>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getGroupCount()</name>
 </method>
 <method>
 <return-value>long</return-value>
 <name>getGroupId(int groupPosition)</name>
 </method>
 <method>
 <return-value>View</return-value>
 <name>getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)</name>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>hasStableIds()</name>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>isChildSelectable(int groupPosition, int childPosition)</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetChanged()</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetChanged(boolean releaseCursors)</name>
 <description>Notifies a data set change, but with the option of not releasing any cached cursors.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetInvalidated()</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>onGroupCollapsed(int groupPosition)</name>
 <description>Called when a group is collapsed.</description>
 </method>
 <method>
 <return-value>Cursor</return-value>
 <name>runQueryOnBackgroundThread(CharSequence constraint)</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setChildrenCursor(int groupPosition, Cursor childrenCursor)</name>
 <description>Sets the children Cursor for a particular group.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setFilterQueryProvider(FilterQueryProvider filterQueryProvider)</name>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setGroupCursor(Cursor cursor)</name>
 <description>Sets the group Cursor.</description>
 </method>
 </public_methods>
 <api-section>
 <api>
 <name>CursorTreeAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public CursorTreeAdapter (Cursor cursor, 
                Context context)</api_signature>
 <description>Constructor. The adapter will call Cursor.requery() on the cursor whenever it changes so that the most recent data is always displayed.</description>
 <parameters>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The cursor from which to get the data for the groups.</description>
 </parameter>
 <parameter>
 <name>context</name>
 <description>Context</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>CursorTreeAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public CursorTreeAdapter (Cursor cursor, 
                Context context, 
                boolean autoRequery)</api_signature>
 <description>Constructor.</description>
 <parameters>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The cursor from which to get the data for the groups.</description>
 </parameter>
 <parameter>
 <name>context</name>
 <description>Context: The context</description>
 </parameter>
 <parameter>
 <name>autoRequery</name>
 <description>boolean: If true the adapter will call Cursor.requery() on the cursor whenever it changes so the most recent data is always displayed.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>changeCursor</name>
 <api_level>API level 1</api_level>
 <api_signature>public void changeCursor (Cursor cursor)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>cursor</name>
 <description>Cursor</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>convertToString</name>
 <api_level>API level 1</api_level>
 <api_signature>public String convertToString (Cursor cursor)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>cursor</name>
 <description>Cursor</description>
 </parameter>
 <parameter>
 <name>String</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getChild</name>
 <api_level>API level 1</api_level>
 <api_signature>public Cursor getChild (int groupPosition, 
                int childPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>childPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>Cursor</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getChildId</name>
 <api_level>API level 1</api_level>
 <api_signature>public long getChildId (int groupPosition, 
                int childPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>childPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>long</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getChildView</name>
 <api_level>API level 1</api_level>
 <api_signature>public View getChildView (int groupPosition, 
                int childPosition, 
                boolean isLastChild, 
                View convertView, 
                ViewGroup parent)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>childPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>isLastChild</name>
 <description>boolean</description>
 </parameter>
 <parameter>
 <name>convertView</name>
 <description>View</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getChildrenCount</name>
 <api_level>API level 1</api_level>
 <api_signature>public int getChildrenCount (int groupPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>int</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getCursor</name>
 <api_level>API level 1</api_level>
 <api_signature>public Cursor getCursor ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>Cursor</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getFilter</name>
 <api_level>API level 1</api_level>
 <api_signature>public Filter getFilter ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>Filter</name>
 <description>a filter used to constrain data</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getFilterQueryProvider</name>
 <api_level>API level 1</api_level>
 <api_signature>public FilterQueryProvider getFilterQueryProvider ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>FilterQueryProvider</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getGroup</name>
 <api_level>API level 1</api_level>
 <api_signature>public Cursor getGroup (int groupPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>Cursor</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getGroupCount</name>
 <api_level>API level 1</api_level>
 <api_signature>public int getGroupCount ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>int</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getGroupId</name>
 <api_level>API level 1</api_level>
 <api_signature>public long getGroupId (int groupPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>long</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getGroupView</name>
 <api_level>API level 1</api_level>
 <api_signature>public View getGroupView (int groupPosition, 
                boolean isExpanded, 
                View convertView, 
                ViewGroup parent)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>isExpanded</name>
 <description>boolean</description>
 </parameter>
 <parameter>
 <name>convertView</name>
 <description>View</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>hasStableIds</name>
 <api_level>API level 1</api_level>
 <api_signature>public boolean hasStableIds ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>boolean</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>isChildSelectable</name>
 <api_level>API level 1</api_level>
 <api_signature>public boolean isChildSelectable (int groupPosition, 
                int childPosition)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>childPosition</name>
 <description>int</description>
 </parameter>
 <parameter>
 <name>boolean</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>notifyDataSetChanged</name>
 <api_level>API level 1</api_level>
 <api_signature>public void notifyDataSetChanged ()</api_signature>
 <description></description>
 </api>
 <api>
 <name>notifyDataSetChanged</name>
 <api_level>API level 1</api_level>
 <api_signature>public void notifyDataSetChanged (boolean releaseCursors)</api_signature>
 <description>Notifies a data set change, but with the option of not releasing any cached cursors.</description>
 <parameters>
 <parameter>
 <name>releaseCursors</name>
 <description>boolean: Whether to release and deactivate any cached cursors.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>notifyDataSetInvalidated</name>
 <api_level>API level 1</api_level>
 <api_signature>public void notifyDataSetInvalidated ()</api_signature>
 <description></description>
 </api>
 <api>
 <name>onGroupCollapsed</name>
 <api_level>API level 1</api_level>
 <api_signature>public void onGroupCollapsed (int groupPosition)</api_signature>
 <description>Called when a group is collapsed.</description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int: The group being collapsed.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>runQueryOnBackgroundThread</name>
 <api_level>API level 1</api_level>
 <api_signature>public Cursor runQueryOnBackgroundThread (CharSequence constraint)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>constraint</name>
 <description>CharSequence</description>
 </parameter>
 <parameter>
 <name>Cursor</name>
 <description></description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setChildrenCursor</name>
 <api_level>API level 1</api_level>
 <api_signature>public void setChildrenCursor (int groupPosition, 
                Cursor childrenCursor)</api_signature>
 <description>Sets the children Cursor for a particular group. If there is an existing cursor it will be closed.</description>
 <parameters>
 <parameter>
 <name>groupPosition</name>
 <description>int: The group whose children are being set via this Cursor.</description>
 </parameter>
 <parameter>
 <name>childrenCursor</name>
 <description>Cursor: The Cursor that contains the children of the group.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setFilterQueryProvider</name>
 <api_level>API level 1</api_level>
 <api_signature>public void setFilterQueryProvider (FilterQueryProvider filterQueryProvider)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>filterQueryProvider</name>
 <description>FilterQueryProvider</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setGroupCursor</name>
 <api_level>API level 1</api_level>
 <api_signature>public void setGroupCursor (Cursor cursor)</api_signature>
 <description>Sets the group Cursor.</description>
 <parameters>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The Cursor to set for the group. If there is an existing cursor it will be closed.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>bindChildView</name>
 <api_level>API level 1</api_level>
 <api_signature>protected abstract void bindChildView (View view, 
                Context context, 
                Cursor cursor, 
                boolean isLastChild)</api_signature>
 <description>Bind an existing view to the child data pointed to by cursor</description>
 <parameters>
 <parameter>
 <name>view</name>
 <description>View: Existing view, returned earlier by newChildView</description>
 </parameter>
 <parameter>
 <name>context</name>
 <description>Context: Interface to application&amp;apos;s global information</description>
 </parameter>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The cursor from which to get the data. The cursor is already moved to the correct position.</description>
 </parameter>
 <parameter>
 <name>isLastChild</name>
 <description>boolean: Whether the child is the last child within its group.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>bindGroupView</name>
 <api_level>API level 1</api_level>
 <api_signature>protected abstract void bindGroupView (View view, 
                Context context, 
                Cursor cursor, 
                boolean isExpanded)</api_signature>
 <description>Bind an existing view to the group data pointed to by cursor.</description>
 <parameters>
 <parameter>
 <name>view</name>
 <description>View: Existing view, returned earlier by newGroupView.</description>
 </parameter>
 <parameter>
 <name>context</name>
 <description>Context: Interface to application&amp;apos;s global information</description>
 </parameter>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The cursor from which to get the data. The cursor is already moved to the correct position.</description>
 </parameter>
 <parameter>
 <name>isExpanded</name>
 <description>boolean: Whether the group is expanded.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getChildrenCursor</name>
 <api_level>API level 1</api_level>
 <api_signature>protected abstract Cursor getChildrenCursor (Cursor groupCursor)</api_signature>
 <description>Gets the Cursor for the children at the given group. Subclasses must implement this method to return the children data for a particular group.</description>
 <parameters>
 <parameter>
 <name>groupCursor</name>
 <description>Cursor: The cursor pointing to the group whose children cursor should be returned</description>
 </parameter>
 <parameter>
 <name>Cursor</name>
 <description>The cursor for the children of a particular group, or null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>newChildView</name>
 <api_level>API level 1</api_level>
 <api_signature>protected abstract View newChildView (Context context, 
                Cursor cursor, 
                boolean isLastChild, 
                ViewGroup parent)</api_signature>
 <description>Makes a new child view to hold the data pointed to by cursor.</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: Interface to application&amp;apos;s global information</description>
 </parameter>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The cursor from which to get the data. The cursor is already moved to the correct position.</description>
 </parameter>
 <parameter>
 <name>isLastChild</name>
 <description>boolean: Whether the child is the last child within its group.</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup: The parent to which the new view is attached to</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description>the newly created view.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>newGroupView</name>
 <api_level>API level 1</api_level>
 <api_signature>protected abstract View newGroupView (Context context, 
                Cursor cursor, 
                boolean isExpanded, 
                ViewGroup parent)</api_signature>
 <description>Makes a new group view to hold the group data pointed to by cursor.</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: Interface to application&amp;apos;s global information</description>
 </parameter>
 <parameter>
 <name>cursor</name>
 <description>Cursor: The group cursor from which to get the data. The cursor is already moved to the correct position.</description>
 </parameter>
 <parameter>
 <name>isExpanded</name>
 <description>boolean: Whether the group is expanded.</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup: The parent to which the new view is attached to</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description>The newly created view.</description>
 </parameter>
 </parameters>
 </api>
 </api-section>
 </api>