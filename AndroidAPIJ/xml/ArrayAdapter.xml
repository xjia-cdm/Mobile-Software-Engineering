<api>
 <title>ArrayAdapter</title>
 <api-signature>public class ArrayAdapter extends BaseAdapter implements Filterable, ThemedSpinnerAdapter</api-signature>
 <inheritance>java.lang.Object ↳ android.widget.BaseAdapter ↳ android.widget.ArrayAdapter&amp;lt;T&amp;gt;</inheritance>
 <subclasses-direct-summary>
 </subclasses-direct-summary>
 <subclasses-indirect-summary>
 </subclasses-indirect-summary>
 <inherited_xml_attributes>
 </inherited_xml_attributes>
 <inherited_constants>
 <class>
 <name>android.widget.Adapter</name>
 <constant>
 <type>int</type>
 <name>IGNORE_ITEM_VIEW_TYPE</name>
 <description>An item view type that causes the AdapterView to ignore the item view.</description>
 </constant>
 <constant>
 <type>int</type>
 <name>NO_SELECTION</name>
 <description></description>
 </constant>
 </class>
 </inherited_constants>
 <inherited_fields>
 </inherited_fields>
 <inherited_methods>
 <name>android.widget.BaseAdapter</name>
 <class>
 <method>
 <return-value>boolean</return-value>
 <name>areAllItemsEnabled()</name>
 <description>Indicates whether all the items in this adapter are enabled.</description>
 </method>
 <method>
 <return-value>CharSequence[]</return-value>
 <name>getAutofillOptions()</name>
 <description>Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.</description>
 </method>
 <method>
 <return-value>View</return-value>
 <name>getDropDownView(int position, View convertView, ViewGroup parent)</name>
 <description>Gets a View that displays in the drop down popup the data at the specified position in the data set.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getItemViewType(int position)</name>
 <description>Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getViewTypeCount()</name>
 <description></description>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>hasStableIds()</name>
 <description>Indicates whether the item ids are stable across changes to the underlying data.</description>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>isEmpty()</name>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>isEnabled(int position)</name>
 <description>Returns true if the item at the specified position is not a separator.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetChanged()</name>
 <description>Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetInvalidated()</name>
 <description>Notifies the attached observers that the underlying data is no longer valid or available.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>registerDataSetObserver(DataSetObserver observer)</name>
 <description>Register an observer that is called when changes happen to the data used by this adapter.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setAutofillOptions(CharSequence... options)</name>
 <description>Sets the value returned by getAutofillOptions()</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>unregisterDataSetObserver(DataSetObserver observer)</name>
 <description>Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).</description>
 </method>
 </class>
 <name>java.lang.Object</name>
 <class>
 <method>
 <return-value>Object</return-value>
 <name>clone()</name>
 <description>Creates and returns a copy of this object.</description>
 </method>
 <method>
 <return-value>boolean</return-value>
 <name>equals(Object obj)</name>
 <description>Indicates whether some other object is &amp;quot;equal to&amp;quot; this one.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>finalize()</name>
 <description>Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.</description>
 </method>
 <method>
 <return-value>final Class&amp;lt;?&amp;gt;</return-value>
 <name>getClass()</name>
 <description>Returns the runtime class of this Object.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>hashCode()</name>
 <description>Returns a hash code value for the object.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>notify()</name>
 <description>Wakes up a single thread that is waiting on this object&amp;apos;s monitor.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>notifyAll()</name>
 <description>Wakes up all threads that are waiting on this object&amp;apos;s monitor.</description>
 </method>
 <method>
 <return-value>String</return-value>
 <name>toString()</name>
 <description>Returns a string representation of the object.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait(long millis, int nanos)</name>
 <description>Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait(long millis)</name>
 <description>Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.</description>
 </method>
 <method>
 <return-value>final void</return-value>
 <name>wait()</name>
 <description>Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.</description>
 </method>
 </class>
 <name>android.widget.ListAdapter</name>
 <class>
 <method>
 <return-value>abstract boolean</return-value>
 <name>areAllItemsEnabled()</name>
 <description>Indicates whether all the items in this adapter are enabled.</description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>isEnabled(int position)</name>
 <description>Returns true if the item at the specified position is not a separator.</description>
 </method>
 </class>
 <name>android.widget.SpinnerAdapter</name>
 <class>
 <method>
 <return-value>abstract View</return-value>
 <name>getDropDownView(int position, View convertView, ViewGroup parent)</name>
 <description>Gets a View that displays in the drop down popup the data at the specified position in the data set.</description>
 </method>
 </class>
 <name>android.widget.Filterable</name>
 <class>
 <method>
 <return-value>abstract Filter</return-value>
 <name>getFilter()</name>
 <description></description>
 </method>
 </class>
 <name>android.widget.ThemedSpinnerAdapter</name>
 <class>
 <method>
 <return-value>abstract Resources.Theme</return-value>
 <name>getDropDownViewTheme()</name>
 <description>Returns the value previously set by a call to setDropDownViewTheme(Theme).</description>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>setDropDownViewTheme(Resources.Theme theme)</name>
 <description>Sets the Resources.Theme against which drop-down views are inflated.</description>
 </method>
 </class>
 <name>android.widget.Adapter</name>
 <class>
 <method>
 <return-value>default CharSequence[]</return-value>
 <name>getAutofillOptions()</name>
 <description>Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getCount()</name>
 <description>How many items are in the data set represented by this Adapter.</description>
 </method>
 <method>
 <return-value>abstract Object</return-value>
 <name>getItem(int position)</name>
 <description>Get the data item associated with the specified position in the data set.</description>
 </method>
 <method>
 <return-value>abstract long</return-value>
 <name>getItemId(int position)</name>
 <description>Get the row id associated with the specified position in the list.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getItemViewType(int position)</name>
 <description>Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.</description>
 </method>
 <method>
 <return-value>abstract View</return-value>
 <name>getView(int position, View convertView, ViewGroup parent)</name>
 <description>Get a View that displays the data at the specified position in the data set.</description>
 </method>
 <method>
 <return-value>abstract int</return-value>
 <name>getViewTypeCount()</name>
 <description></description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>hasStableIds()</name>
 <description>Indicates whether the item ids are stable across changes to the underlying data.</description>
 </method>
 <method>
 <return-value>abstract boolean</return-value>
 <name>isEmpty()</name>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>registerDataSetObserver(DataSetObserver observer)</name>
 <description>Register an observer that is called when changes happen to the data used by this adapter.</description>
 </method>
 <method>
 <return-value>abstract void</return-value>
 <name>unregisterDataSetObserver(DataSetObserver observer)</name>
 <description>Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).</description>
 </method>
 </class>
 </inherited_methods>
 <public_constructors>
 <method>
 <name>ArrayAdapter(Context context, int resource)</name>
 <description>Constructor</description>
 </method>
 <method>
 <name>ArrayAdapter(Context context, int resource, int textViewResourceId)</name>
 <description>Constructor</description>
 </method>
 <method>
 <name>ArrayAdapter(Context context, int resource, T[] objects)</name>
 <description>Constructor.</description>
 </method>
 <method>
 <name>ArrayAdapter(Context context, int resource, int textViewResourceId, T[] objects)</name>
 <description>Constructor.</description>
 </method>
 <method>
 <name>ArrayAdapter(Context context, int resource, List&amp;lt;T&amp;gt; objects)</name>
 <description>Constructor</description>
 </method>
 <method>
 <name>ArrayAdapter(Context context, int resource, int textViewResourceId, List&amp;lt;T&amp;gt; objects)</name>
 <description>Constructor</description>
 </method>
 </public_constructors>
 <public_methods>
 <method>
 <return-value>void</return-value>
 <name>add(T object)</name>
 <description>Adds the specified object at the end of the array.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>addAll(T... items)</name>
 <description>Adds the specified items at the end of the array.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>addAll(Collection&amp;lt;? extends T&amp;gt; collection)</name>
 <description>Adds the specified Collection at the end of the array.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>clear()</name>
 <description>Remove all elements from the list.</description>
 </method>
 <method>
 <return-value>static ArrayAdapter&amp;lt;CharSequence&amp;gt;</return-value>
 <name>createFromResource(Context context, int textArrayResId, int textViewResId)</name>
 <description>Creates a new ArrayAdapter from external resources.</description>
 </method>
 <method>
 <return-value>CharSequence[]</return-value>
 <name>getAutofillOptions()</name>
 <description>Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.</description>
 </method>
 <method>
 <return-value>Context</return-value>
 <name>getContext()</name>
 <description>Returns the context associated with this array adapter.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getCount()</name>
 <description>How many items are in the data set represented by this Adapter.</description>
 </method>
 <method>
 <return-value>View</return-value>
 <name>getDropDownView(int position, View convertView, ViewGroup parent)</name>
 <description>Gets a View that displays in the drop down popup the data at the specified position in the data set.</description>
 </method>
 <method>
 <return-value>Resources.Theme</return-value>
 <name>getDropDownViewTheme()</name>
 <description>Returns the value previously set by a call to setDropDownViewTheme(Theme).</description>
 </method>
 <method>
 <return-value>Filter</return-value>
 <name>getFilter()</name>
 <description></description>
 </method>
 <method>
 <return-value>T</return-value>
 <name>getItem(int position)</name>
 <description>Get the data item associated with the specified position in the data set.</description>
 </method>
 <method>
 <return-value>long</return-value>
 <name>getItemId(int position)</name>
 <description>Get the row id associated with the specified position in the list.</description>
 </method>
 <method>
 <return-value>int</return-value>
 <name>getPosition(T item)</name>
 <description>Returns the position of the specified item in the array.</description>
 </method>
 <method>
 <return-value>View</return-value>
 <name>getView(int position, View convertView, ViewGroup parent)</name>
 <description>Get a View that displays the data at the specified position in the data set.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>insert(T object, int index)</name>
 <description>Inserts the specified object at the specified index in the array.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>notifyDataSetChanged()</name>
 <description>Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>remove(T object)</name>
 <description>Removes the specified object from the array.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setDropDownViewResource(int resource)</name>
 <description></description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setDropDownViewTheme(Resources.Theme theme)</name>
 <description>Sets the Resources.Theme against which drop-down views are inflated.</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>setNotifyOnChange(boolean notifyOnChange)</name>
 <description>Control whether methods that change the list (add(T), addAll(Collection), addAll(Object[]), insert(T, int), remove(T), clear(), sort(Comparator)) automatically call notifyDataSetChanged().</description>
 </method>
 <method>
 <return-value>void</return-value>
 <name>sort(Comparator&amp;lt;? super T&amp;gt; comparator)</name>
 <description>Sorts the content of this adapter using the specified comparator.</description>
 </method>
 </public_methods>
 <api-section>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource)</api_signature>
 <description>Constructor</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a TextView to use when instantiating views.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource, 
                int textViewResourceId)</api_signature>
 <description>Constructor</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a layout to use when instantiating views.</description>
 </parameter>
 <parameter>
 <name>textViewResourceId</name>
 <description>int: The id of the TextView within the layout resource to be populated</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource, 
                T[] objects)</api_signature>
 <description>Constructor. This constructor will result in the underlying data collection being immutable, so methods such as clear() will throw an exception.</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a TextView to use when instantiating views.</description>
 </parameter>
 <parameter>
 <name>objects</name>
 <description>T: The objects to represent in the ListView. This value must never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource, 
                int textViewResourceId, 
                T[] objects)</api_signature>
 <description>Constructor. This constructor will result in the underlying data collection being immutable, so methods such as clear() will throw an exception.</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a layout to use when instantiating views.</description>
 </parameter>
 <parameter>
 <name>textViewResourceId</name>
 <description>int: The id of the TextView within the layout resource to be populated</description>
 </parameter>
 <parameter>
 <name>objects</name>
 <description>T: The objects to represent in the ListView. This value must never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource, 
                List&amp;lt;T&amp;gt; objects)</api_signature>
 <description>Constructor</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a TextView to use when instantiating views.</description>
 </parameter>
 <parameter>
 <name>objects</name>
 <description>List: The objects to represent in the ListView. This value must never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>ArrayAdapter</name>
 <api_level>API level 1</api_level>
 <api_signature>public ArrayAdapter (Context context, 
                int resource, 
                int textViewResourceId, 
                List&amp;lt;T&amp;gt; objects)</api_signature>
 <description>Constructor</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The current context. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>resource</name>
 <description>int: The resource ID for a layout file containing a layout to use when instantiating views.</description>
 </parameter>
 <parameter>
 <name>textViewResourceId</name>
 <description>int: The id of the TextView within the layout resource to be populated</description>
 </parameter>
 <parameter>
 <name>objects</name>
 <description>List: The objects to represent in the ListView. This value must never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>add</name>
 <api_level>API level 1</api_level>
 <api_signature>public void add (T object)</api_signature>
 <description>Adds the specified object at the end of the array.</description>
 <parameters>
 <parameter>
 <name>object</name>
 <description>T: The object to add at the end of the array. This value may be null.</description>
 </parameter>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the underlying data collection is immutable</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>addAll</name>
 <api_level>API level 11</api_level>
 <api_signature>public void addAll (T... items)</api_signature>
 <description>Adds the specified items at the end of the array.</description>
 <parameters>
 <parameter>
 <name>items</name>
 <description>T: The items to add at the end of the array.</description>
 </parameter>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the underlying data collection is immutable</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>addAll</name>
 <api_level>API level 11</api_level>
 <api_signature>public void addAll (Collection&amp;lt;? extends T&amp;gt; collection)</api_signature>
 <description>Adds the specified Collection at the end of the array.</description>
 <parameters>
 <parameter>
 <name>collection</name>
 <description>Collection: The Collection to add at the end of the array. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the addAll operation is not supported by this list</description>
 </parameter>
 <parameter>
 <name>ClassCastException</name>
 <description>if the class of an element of the specified collection prevents it from being added to this list</description>
 </parameter>
 <parameter>
 <name>NullPointerException</name>
 <description>if the specified collection contains one or more null elements and this list does not permit null elements, or if the specified collection is null</description>
 </parameter>
 <parameter>
 <name>IllegalArgumentException</name>
 <description>if some property of an element of the specified collection prevents it from being added to this list</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>clear</name>
 <api_level>API level 1</api_level>
 <api_signature>public void clear ()</api_signature>
 <description>Remove all elements from the list.</description>
 <parameters>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the underlying data collection is immutable</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>createFromResource</name>
 <api_level>API level 1</api_level>
 <api_signature>public static ArrayAdapter&amp;lt;CharSequence&amp;gt; createFromResource (Context context, 
                int textArrayResId, 
                int textViewResId)</api_signature>
 <description>Creates a new ArrayAdapter from external resources. The content of the array is obtained through Resources.getTextArray(int).</description>
 <parameters>
 <parameter>
 <name>context</name>
 <description>Context: The application&amp;apos;s environment. This value must never be null.</description>
 </parameter>
 <parameter>
 <name>textArrayResId</name>
 <description>int: The identifier of the array to use as the data source.</description>
 </parameter>
 <parameter>
 <name>textViewResId</name>
 <description>int: The identifier of the layout used to create views.</description>
 </parameter>
 <parameter>
 <name>ArrayAdapter&amp;lt;CharSequence&amp;gt;</name>
 <description>An ArrayAdapter . This value will never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getAutofillOptions</name>
 <api_level>API level 26</api_level>
 <api_signature>public CharSequence[] getAutofillOptions ()</api_signature>
 <description>Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.</description>
 <parameters>
 <parameter>
 <name>CharSequence[]</name>
 <description>values from the string array used by createFromResource(Context, int, int), or null if object was created otherwsie or if contents were dynamically changed after creation.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getContext</name>
 <api_level>API level 1</api_level>
 <api_signature>public Context getContext ()</api_signature>
 <description>Returns the context associated with this array adapter. The context is used to create views from the resource passed to the constructor.</description>
 <parameters>
 <parameter>
 <name>Context</name>
 <description>The Context associated with this adapter. This value will never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getCount</name>
 <api_level>API level 1</api_level>
 <api_signature>public int getCount ()</api_signature>
 <description>How many items are in the data set represented by this Adapter.</description>
 <parameters>
 <parameter>
 <name>int</name>
 <description>Count of items.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getDropDownView</name>
 <api_level>API level 1</api_level>
 <api_signature>public View getDropDownView (int position, 
                View convertView, 
                ViewGroup parent)</api_signature>
 <description>Gets a View that displays in the drop down popup the data at the specified position in the data set.</description>
 <parameters>
 <parameter>
 <name>position</name>
 <description>int: index of the item whose view we want.</description>
 </parameter>
 <parameter>
 <name>convertView</name>
 <description>View: the old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view.</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup: the parent that this view will eventually be attached to This value must never be null.</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description>a View corresponding to the data at the specified position.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getDropDownViewTheme</name>
 <api_level>API level 23</api_level>
 <api_signature>public Resources.Theme getDropDownViewTheme ()</api_signature>
 <description>Returns the value previously set by a call to setDropDownViewTheme(Theme).</description>
 <parameters>
 <parameter>
 <name>Resources.Theme</name>
 <description>the Resources.Theme against which drop-down views are inflated, or null if one has not been explicitly set This value may be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getFilter</name>
 <api_level>API level 1</api_level>
 <api_signature>public Filter getFilter ()</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>Filter</name>
 <description>a filter used to constrain data This value will never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getItem</name>
 <api_level>API level 1</api_level>
 <api_signature>public T getItem (int position)</api_signature>
 <description>Get the data item associated with the specified position in the data set.</description>
 <parameters>
 <parameter>
 <name>position</name>
 <description>int: Position of the item whose data we want within the adapter&amp;apos;s data set.</description>
 </parameter>
 <parameter>
 <name>T</name>
 <description>The data at the specified position. This value may be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getItemId</name>
 <api_level>API level 1</api_level>
 <api_signature>public long getItemId (int position)</api_signature>
 <description>Get the row id associated with the specified position in the list.</description>
 <parameters>
 <parameter>
 <name>position</name>
 <description>int: The position of the item within the adapter&amp;apos;s data set whose row id we want.</description>
 </parameter>
 <parameter>
 <name>long</name>
 <description>The id of the item at the specified position.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getPosition</name>
 <api_level>API level 1</api_level>
 <api_signature>public int getPosition (T item)</api_signature>
 <description>Returns the position of the specified item in the array.</description>
 <parameters>
 <parameter>
 <name>item</name>
 <description>T: The item to retrieve the position of. This value may be null.</description>
 </parameter>
 <parameter>
 <name>int</name>
 <description>The position of the specified item.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>getView</name>
 <api_level>API level 1</api_level>
 <api_signature>public View getView (int position, 
                View convertView, 
                ViewGroup parent)</api_signature>
 <description>Get a View that displays the data at the specified position in the data set. You can either create a View manually or inflate it from an XML layout file. When the View is inflated, the parent View (GridView, ListView...) will apply default layout parameters unless you use LayoutInflater.inflate(int, android.view.ViewGroup, boolean) to specify a root view and to prevent attachment to the root.</description>
 <parameters>
 <parameter>
 <name>position</name>
 <description>int: The position of the item within the adapter&amp;apos;s data set of the item whose view we want.</description>
 </parameter>
 <parameter>
 <name>convertView</name>
 <description>View: The old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view. Heterogeneous lists can specify their number of view types, so that this View is always of the right type (see BaseAdapter.getViewTypeCount() and BaseAdapter.getItemViewType(int)).</description>
 </parameter>
 <parameter>
 <name>parent</name>
 <description>ViewGroup: The parent that this view will eventually be attached to This value must never be null.</description>
 </parameter>
 <parameter>
 <name>View</name>
 <description>A View corresponding to the data at the specified position. This value will never be null.</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>insert</name>
 <api_level>API level 1</api_level>
 <api_signature>public void insert (T object, 
                int index)</api_signature>
 <description>Inserts the specified object at the specified index in the array.</description>
 <parameters>
 <parameter>
 <name>object</name>
 <description>T: The object to insert into the array. This value may be null.</description>
 </parameter>
 <parameter>
 <name>index</name>
 <description>int: The index at which the object must be inserted.</description>
 </parameter>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the underlying data collection is immutable</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>notifyDataSetChanged</name>
 <api_level>API level 1</api_level>
 <api_signature>public void notifyDataSetChanged ()</api_signature>
 <description>Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.</description>
 </api>
 <api>
 <name>remove</name>
 <api_level>API level 1</api_level>
 <api_signature>public void remove (T object)</api_signature>
 <description>Removes the specified object from the array.</description>
 <parameters>
 <parameter>
 <name>object</name>
 <description>T: The object to remove. This value may be null.</description>
 </parameter>
 <parameter>
 <name>UnsupportedOperationException</name>
 <description>if the underlying data collection is immutable</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setDropDownViewResource</name>
 <api_level>API level 1</api_level>
 <api_signature>public void setDropDownViewResource (int resource)</api_signature>
 <description></description>
 <parameters>
 <parameter>
 <name>resource</name>
 <description>int: the layout resource defining the drop down views</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setDropDownViewTheme</name>
 <api_level>API level 23</api_level>
 <api_signature>public void setDropDownViewTheme (Resources.Theme theme)</api_signature>
 <description>Sets the Resources.Theme against which drop-down views are inflated.</description>
 <parameters>
 <parameter>
 <name>theme</name>
 <description>Resources.Theme: the theme against which to inflate drop-down views or null to use the theme from the adapter&amp;apos;s context</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>setNotifyOnChange</name>
 <api_level>API level 1</api_level>
 <api_signature>public void setNotifyOnChange (boolean notifyOnChange)</api_signature>
 <description>Control whether methods that change the list (add(T), addAll(Collection), addAll(Object[]), insert(T, int), remove(T), clear(), sort(Comparator)) automatically call notifyDataSetChanged(). If set to false, caller must manually call notifyDataSetChanged() to have the changes reflected in the attached view. The default is true, and calling notifyDataSetChanged() resets the flag to true.</description>
 <parameters>
 <parameter>
 <name>notifyOnChange</name>
 <description>boolean: if true, modifications to the list will automatically call notifyDataSetChanged()</description>
 </parameter>
 </parameters>
 </api>
 <api>
 <name>sort</name>
 <api_level>API level 3</api_level>
 <api_signature>public void sort (Comparator&amp;lt;? super T&amp;gt; comparator)</api_signature>
 <description>Sorts the content of this adapter using the specified comparator.</description>
 <parameters>
 <parameter>
 <name>comparator</name>
 <description>Comparator: The comparator used to sort the objects contained in this adapter. This value must never be null.</description>
 </parameter>
 </parameters>
 </api>
 </api-section>
 </api>