api:
 title: OverScroller
 api-signature: public class OverScroller extends Object
 inheritance: java.lang.Object â†³ android.widget.OverScroller
 subclasses-direct-summary: 
 subclasses-indirect-summary: 
 inherited_xml_attributes: 
 inherited_constants: 
 inherited_fields: 
 inherited_methods: 
  name: java.lang.Object
   class: 
     method: 
      - 
       return-value: Object
       name: clone()
       description: Creates and returns a copy of this object.
      - 
       return-value: boolean
       name: equals(Object obj)
       description: Indicates whether some other object is "equal to" this one.
      - 
       return-value: void
       name: finalize()
       description: Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
      - 
       return-value: final Class<?>
       name: getClass()
       description: Returns the runtime class of this Object.
      - 
       return-value: int
       name: hashCode()
       description: Returns a hash code value for the object.
      - 
       return-value: final void
       name: notify()
       description: Wakes up a single thread that is waiting on this object's monitor.
      - 
       return-value: final void
       name: notifyAll()
       description: Wakes up all threads that are waiting on this object's monitor.
      - 
       return-value: String
       name: toString()
       description: Returns a string representation of the object.
      - 
       return-value: final void
       name: wait(long millis, int nanos)
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.
      - 
       return-value: final void
       name: wait(long millis)
       description: Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
      - 
       return-value: final void
       name: wait()
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.
 public_constructors: 
  method: 
   - 
    name: OverScroller(Context context)
    description: Creates an OverScroller with a viscous fluid scroll interpolator and flywheel.
   - 
    name: OverScroller(Context context, Interpolator interpolator)
    description: Creates an OverScroller with flywheel enabled.
   - 
    name: OverScroller(Context context, Interpolator interpolator, float bounceCoefficientX, float bounceCoefficientY)
    description: This constructor was deprecated in API level 26. Use OverScroller(Context, Interpolator) instead.
   - 
    name: OverScroller(Context context, Interpolator interpolator, float bounceCoefficientX, float bounceCoefficientY, boolean flywheel)
    description: This constructor was deprecated in API level 26. Use OverScroller(Context, Interpolator) instead.
 public_methods: 
  method: 
   - 
    return-value: void
    name: abortAnimation()
    description: Stops the animation.
   - 
    return-value: boolean
    name: computeScrollOffset()
    description: Call this when you want to know the new location.
   - 
    return-value: void
    name: fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY)
   - 
    return-value: void
    name: fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY, int overX, int overY)
    description: Start scrolling based on a fling gesture.
   - 
    return-value: final void
    name: forceFinished(boolean finished)
    description: Force the finished field to a particular value.
   - 
    return-value: float
    name: getCurrVelocity()
    description: Returns the absolute value of the current velocity.
   - 
    return-value: final int
    name: getCurrX()
    description: Returns the current X offset in the scroll.
   - 
    return-value: final int
    name: getCurrY()
    description: Returns the current Y offset in the scroll.
   - 
    return-value: final int
    name: getFinalX()
    description: Returns where the scroll will end.
   - 
    return-value: final int
    name: getFinalY()
    description: Returns where the scroll will end.
   - 
    return-value: final int
    name: getStartX()
    description: Returns the start X offset in the scroll.
   - 
    return-value: final int
    name: getStartY()
    description: Returns the start Y offset in the scroll.
   - 
    return-value: final boolean
    name: isFinished()
    description: Returns whether the scroller has finished scrolling.
   - 
    return-value: boolean
    name: isOverScrolled()
    description: Returns whether the current Scroller is currently returning to a valid position.
   - 
    return-value: void
    name: notifyHorizontalEdgeReached(int startX, int finalX, int overX)
    description: Notify the scroller that we've reached a horizontal boundary.
   - 
    return-value: void
    name: notifyVerticalEdgeReached(int startY, int finalY, int overY)
    description: Notify the scroller that we've reached a vertical boundary.
   - 
    return-value: final void
    name: setFriction(float friction)
    description: The amount of friction applied to flings.
   - 
    return-value: boolean
    name: springBack(int startX, int startY, int minX, int maxX, int minY, int maxY)
    description: Call this when you want to 'spring back' into a valid coordinate range.
   - 
    return-value: void
    name: startScroll(int startX, int startY, int dx, int dy, int duration)
    description: Start scrolling by providing a starting point and the distance to travel.
   - 
    return-value: void
    name: startScroll(int startX, int startY, int dx, int dy)
    description: Start scrolling by providing a starting point and the distance to travel.
 api-section: 
  api: 
   - 
    name: OverScroller
    api_level: API level 9
    api_signature: public OverScroller (Context context)
    description: Creates an OverScroller with a viscous fluid scroll interpolator and flywheel.
   - 
    name: OverScroller
    api_level: API level 9
    api_signature: public OverScroller (Context context, 
                Interpolator interpolator)
    description: Creates an OverScroller with flywheel enabled.
     parameters: 
      parameter: 
       - 
        name: context
        description: Context: The context of this application.
       - 
        name: interpolator
        description: Interpolator: The scroll interpolator. If null, a default (viscous) interpolator will be used.
   - 
    name: OverScroller
    api_level: API level 9
    api_signature: public OverScroller (Context context, 
                Interpolator interpolator, 
                float bounceCoefficientX, 
                float bounceCoefficientY)
    description: 
     parameters: 
      parameter: 
       - 
        name: context
        description: Context: The context of this application.
       - 
        name: interpolator
        description: Interpolator: The scroll interpolator. If null, a default (viscous) interpolator will be used.
       - 
        name: bounceCoefficientX
        description: float: A value between 0 and 1 that will determine the proportion of the velocity which is preserved in the bounce when the horizontal edge is reached. A null value means no bounce. This behavior is no longer supported and this coefficient has no effect.
       - 
        name: bounceCoefficientY
        description: float: Same as bounceCoefficientX but for the vertical direction. This behavior is no longer supported and this coefficient has no effect.
   - 
    name: OverScroller
    api_level: API level 11
    api_signature: public OverScroller (Context context, 
                Interpolator interpolator, 
                float bounceCoefficientX, 
                float bounceCoefficientY, 
                boolean flywheel)
    description: 
     parameters: 
      parameter: 
       - 
        name: context
        description: Context: The context of this application.
       - 
        name: interpolator
        description: Interpolator: The scroll interpolator. If null, a default (viscous) interpolator will be used.
       - 
        name: bounceCoefficientX
        description: float: A value between 0 and 1 that will determine the proportion of the velocity which is preserved in the bounce when the horizontal edge is reached. A null value means no bounce. This behavior is no longer supported and this coefficient has no effect.
       - 
        name: bounceCoefficientY
        description: float: Same as bounceCoefficientX but for the vertical direction. This behavior is no longer supported and this coefficient has no effect.
       - 
        name: flywheel
        description: boolean: If true, successive fling motions will keep on increasing scroll speed.
   - 
    name: abortAnimation
    api_level: API level 9
    api_signature: public void abortAnimation ()
    description: Stops the animation. Contrary to forceFinished(boolean), aborting the animating causes the scroller to move to the final x and y positions.
   - 
    name: computeScrollOffset
    api_level: API level 9
    api_signature: public boolean computeScrollOffset ()
    description: Call this when you want to know the new location. If it returns true, the animation is not yet finished.
     parameters: 
      parameter: 
       - 
        name: boolean
        description: 
   - 
    name: fling
    api_level: API level 9
    api_signature: public void fling (int startX, 
                int startY, 
                int velocityX, 
                int velocityY, 
                int minX, 
                int maxX, 
                int minY, 
                int maxY)
    description: 
     parameters: 
      parameter: 
       - 
        name: startX
        description: int
       - 
        name: startY
        description: int
       - 
        name: velocityX
        description: int
       - 
        name: velocityY
        description: int
       - 
        name: minX
        description: int
       - 
        name: maxX
        description: int
       - 
        name: minY
        description: int
       - 
        name: maxY
        description: int
   - 
    name: fling
    api_level: API level 9
    api_signature: public void fling (int startX, 
                int startY, 
                int velocityX, 
                int velocityY, 
                int minX, 
                int maxX, 
                int minY, 
                int maxY, 
                int overX, 
                int overY)
    description: Start scrolling based on a fling gesture. The distance traveled will depend on the initial velocity of the fling.
     parameters: 
      parameter: 
       - 
        name: startX
        description: int: Starting point of the scroll (X)
       - 
        name: startY
        description: int: Starting point of the scroll (Y)
       - 
        name: velocityX
        description: int: Initial velocity of the fling (X) measured in pixels per second.
       - 
        name: velocityY
        description: int: Initial velocity of the fling (Y) measured in pixels per second
       - 
        name: minX
        description: int: Minimum X value. The scroller will not scroll past this point unless overX > 0. If overfling is allowed, it will use minX as a springback boundary.
       - 
        name: maxX
        description: int: Maximum X value. The scroller will not scroll past this point unless overX > 0. If overfling is allowed, it will use maxX as a springback boundary.
       - 
        name: minY
        description: int: Minimum Y value. The scroller will not scroll past this point unless overY > 0. If overfling is allowed, it will use minY as a springback boundary.
       - 
        name: maxY
        description: int: Maximum Y value. The scroller will not scroll past this point unless overY > 0. If overfling is allowed, it will use maxY as a springback boundary.
       - 
        name: overX
        description: int: Overfling range. If > 0, horizontal overfling in either direction will be possible.
       - 
        name: overY
        description: int: Overfling range. If > 0, vertical overfling in either direction will be possible.
   - 
    name: forceFinished
    api_level: API level 9
    api_signature: public final void forceFinished (boolean finished)
    description: Force the finished field to a particular value. Contrary to abortAnimation(), forcing the animation to finished does NOT cause the scroller to move to the final x and y position.
     parameters: 
      parameter: 
       - 
        name: finished
        description: boolean: The new finished value.
   - 
    name: getCurrVelocity
    api_level: API level 14
    api_signature: public float getCurrVelocity ()
    description: Returns the absolute value of the current velocity.
     parameters: 
      parameter: 
       - 
        name: float
        description: The original velocity less the deceleration, norm of the X and Y velocity vector.
   - 
    name: getCurrX
    api_level: API level 9
    api_signature: public final int getCurrX ()
    description: Returns the current X offset in the scroll.
     parameters: 
      parameter: 
       - 
        name: int
        description: The new X offset as an absolute distance from the origin.
   - 
    name: getCurrY
    api_level: API level 9
    api_signature: public final int getCurrY ()
    description: Returns the current Y offset in the scroll.
     parameters: 
      parameter: 
       - 
        name: int
        description: The new Y offset as an absolute distance from the origin.
   - 
    name: getFinalX
    api_level: API level 9
    api_signature: public final int getFinalX ()
    description: Returns where the scroll will end. Valid only for "fling" scrolls.
     parameters: 
      parameter: 
       - 
        name: int
        description: The final X offset as an absolute distance from the origin.
   - 
    name: getFinalY
    api_level: API level 9
    api_signature: public final int getFinalY ()
    description: Returns where the scroll will end. Valid only for "fling" scrolls.
     parameters: 
      parameter: 
       - 
        name: int
        description: The final Y offset as an absolute distance from the origin.
   - 
    name: getStartX
    api_level: API level 9
    api_signature: public final int getStartX ()
    description: Returns the start X offset in the scroll.
     parameters: 
      parameter: 
       - 
        name: int
        description: The start X offset as an absolute distance from the origin.
   - 
    name: getStartY
    api_level: API level 9
    api_signature: public final int getStartY ()
    description: Returns the start Y offset in the scroll.
     parameters: 
      parameter: 
       - 
        name: int
        description: The start Y offset as an absolute distance from the origin.
   - 
    name: isFinished
    api_level: API level 9
    api_signature: public final boolean isFinished ()
    description: Returns whether the scroller has finished scrolling.
     parameters: 
      parameter: 
       - 
        name: boolean
        description: True if the scroller has finished scrolling, false otherwise.
   - 
    name: isOverScrolled
    api_level: API level 9
    api_signature: public boolean isOverScrolled ()
    description: Returns whether the current Scroller is currently returning to a valid position. Valid bounds were provided by the fling(int, int, int, int, int, int, int, int, int, int) method. One should check this value before calling startScroll(int, int, int, int) as the interpolation currently in progress to restore a valid position will then be stopped. The caller has to take into account the fact that the started scroll will start from an overscrolled position.
     parameters: 
      parameter: 
       - 
        name: boolean
        description: true when the current position is overscrolled and in the process of interpolating back to a valid value.
   - 
    name: notifyHorizontalEdgeReached
    api_level: API level 9
    api_signature: public void notifyHorizontalEdgeReached (int startX, 
                int finalX, 
                int overX)
    description: Notify the scroller that we've reached a horizontal boundary. Normally the information to handle this will already be known when the animation is started, such as in a call to one of the fling functions. However there are cases where this cannot be known in advance. This function will transition the current motion and animate from startX to finalX as appropriate.
     parameters: 
      parameter: 
       - 
        name: startX
        description: int: Starting/current X position
       - 
        name: finalX
        description: int: Desired final X position
       - 
        name: overX
        description: int: Magnitude of overscroll allowed. This should be the maximum desired distance from finalX. Absolute value - must be positive.
   - 
    name: notifyVerticalEdgeReached
    api_level: API level 9
    api_signature: public void notifyVerticalEdgeReached (int startY, 
                int finalY, 
                int overY)
    description: Notify the scroller that we've reached a vertical boundary. Normally the information to handle this will already be known when the animation is started, such as in a call to one of the fling functions. However there are cases where this cannot be known in advance. This function will animate a parabolic motion from startY to finalY.
     parameters: 
      parameter: 
       - 
        name: startY
        description: int: Starting/current Y position
       - 
        name: finalY
        description: int: Desired final Y position
       - 
        name: overY
        description: int: Magnitude of overscroll allowed. This should be the maximum desired distance from finalY. Absolute value - must be positive.
   - 
    name: setFriction
    api_level: API level 11
    api_signature: public final void setFriction (float friction)
    description: The amount of friction applied to flings. The default value is ViewConfiguration.getScrollFriction().
     parameters: 
      parameter: 
       - 
        name: friction
        description: float: A scalar dimension-less value representing the coefficient of friction.
   - 
    name: springBack
    api_level: API level 9
    api_signature: public boolean springBack (int startX, 
                int startY, 
                int minX, 
                int maxX, 
                int minY, 
                int maxY)
    description: Call this when you want to 'spring back' into a valid coordinate range.
     parameters: 
      parameter: 
       - 
        name: startX
        description: int: Starting X coordinate
       - 
        name: startY
        description: int: Starting Y coordinate
       - 
        name: minX
        description: int: Minimum valid X value
       - 
        name: maxX
        description: int: Maximum valid X value
       - 
        name: minY
        description: int: Minimum valid Y value
       - 
        name: maxY
        description: int: Minimum valid Y value
       - 
        name: boolean
        description: true if a springback was initiated, false if startX and startY were already within the valid range.
   - 
    name: startScroll
    api_level: API level 9
    api_signature: public void startScroll (int startX, 
                int startY, 
                int dx, 
                int dy, 
                int duration)
    description: Start scrolling by providing a starting point and the distance to travel.
     parameters: 
      parameter: 
       - 
        name: startX
        description: int: Starting horizontal scroll offset in pixels. Positive numbers will scroll the content to the left.
       - 
        name: startY
        description: int: Starting vertical scroll offset in pixels. Positive numbers will scroll the content up.
       - 
        name: dx
        description: int: Horizontal distance to travel. Positive numbers will scroll the content to the left.
       - 
        name: dy
        description: int: Vertical distance to travel. Positive numbers will scroll the content up.
       - 
        name: duration
        description: int: Duration of the scroll in milliseconds.
   - 
    name: startScroll
    api_level: API level 9
    api_signature: public void startScroll (int startX, 
                int startY, 
                int dx, 
                int dy)
    description: Start scrolling by providing a starting point and the distance to travel. The scroll will use the default value of 250 milliseconds for the duration.
     parameters: 
      parameter: 
       - 
        name: startX
        description: int: Starting horizontal scroll offset in pixels. Positive numbers will scroll the content to the left.
       - 
        name: startY
        description: int: Starting vertical scroll offset in pixels. Positive numbers will scroll the content up.
       - 
        name: dx
        description: int: Horizontal distance to travel. Positive numbers will scroll the content to the left.
       - 
        name: dy
        description: int: Vertical distance to travel. Positive numbers will scroll the content up.