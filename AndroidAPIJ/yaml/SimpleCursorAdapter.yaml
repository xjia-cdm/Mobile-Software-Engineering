api:
 title: SimpleCursorAdapter
 api-signature: public class SimpleCursorAdapter extends ResourceCursorAdapter
 inheritance: java.lang.Object ↳ android.widget.BaseAdapter ↳ android.widget.CursorAdapter ↳ android.widget.ResourceCursorAdapter ↳ android.widget.SimpleCursorAdapter
 subclasses-direct-summary: 
 subclasses-indirect-summary: 
 inherited_xml_attributes: 
 inherited_constants: 
  class: 
   - 
    name: android.widget.CursorAdapter
     conctant: 
      - 
       type: int
       name: FLAG_AUTO_REQUERY
       description:This constant was deprecated in API level 11. This option is discouraged, as it results in Cursor queries being performed on the application's UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use LoaderManager with a CursorLoader.
      - 
       type: int
       name: FLAG_REGISTER_CONTENT_OBSERVER
       description:If set the adapter will register a content observer on the cursor and will call onContentChanged() when a notification comes in.
   - 
    name: android.widget.Adapter
     conctant: 
      - 
       type: int
       name: IGNORE_ITEM_VIEW_TYPE
       description:An item view type that causes the AdapterView to ignore the item view.
      - 
       type: int
       name: NO_SELECTION
       description:
 inherited_fields: 
 inherited_methods: 
  name: android.widget.ResourceCursorAdapter
   class: 
     method: 
      - 
       return-value: View
       name: newDropDownView(Context context, Cursor cursor, ViewGroup parent)
       description: Makes a new drop down view to hold the data pointed to by cursor.
      - 
       return-value: View
       name: newView(Context context, Cursor cursor, ViewGroup parent)
       description: Inflates view(s) from the specified XML file.
      - 
       return-value: void
       name: setDropDownViewResource(int dropDownLayout)
       description: 
      - 
       return-value: void
       name: setDropDownViewTheme(Resources.Theme theme)
       description: Sets the Resources.Theme against which drop-down views are inflated.
      - 
       return-value: void
       name: setViewResource(int layout)
       description: 
  name: android.widget.CursorAdapter
     method: 
      - 
       return-value: abstract void
       name: bindView(View view, Context context, Cursor cursor)
       description: Bind an existing view to the data pointed to by cursor
      - 
       return-value: void
       name: changeCursor(Cursor cursor)
       description: Change the underlying cursor to a new cursor.
      - 
       return-value: CharSequence
       name: convertToString(Cursor cursor)
       description: 
      - 
       return-value: int
       name: getCount()
       description: How many items are in the data set represented by this Adapter.
      - 
       return-value: Cursor
       name: getCursor()
       description: Returns the cursor.
      - 
       return-value: View
       name: getDropDownView(int position, View convertView, ViewGroup parent)
       description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
      - 
       return-value: Resources.Theme
       name: getDropDownViewTheme()
       description: Returns the value previously set by a call to setDropDownViewTheme(Theme).
      - 
       return-value: Filter
       name: getFilter()
       description: 
      - 
       return-value: FilterQueryProvider
       name: getFilterQueryProvider()
       description: Returns the query filter provider used for filtering.
      - 
       return-value: Object
       name: getItem(int position)
       description: Get the data item associated with the specified position in the data set.
      - 
       return-value: long
       name: getItemId(int position)
       description: Get the row id associated with the specified position in the list.
      - 
       return-value: View
       name: getView(int position, View convertView, ViewGroup parent)
       description: Get a View that displays the data at the specified position in the data set.
      - 
       return-value: boolean
       name: hasStableIds()
       description: Indicates whether the item ids are stable across changes to the underlying data.
      - 
       return-value: void
       name: init(Context context, Cursor c, boolean autoRequery)
       description: This method was deprecated in API level 11. Don't use this, use the normal constructor. This will be removed in the future.
      - 
       return-value: View
       name: newDropDownView(Context context, Cursor cursor, ViewGroup parent)
       description: Makes a new drop down view to hold the data pointed to by cursor.
      - 
       return-value: abstract View
       name: newView(Context context, Cursor cursor, ViewGroup parent)
       description: Makes a new view to hold the data pointed to by cursor.
      - 
       return-value: void
       name: onContentChanged()
       description: Called when the ContentObserver on the cursor receives a change notification.
      - 
       return-value: Cursor
       name: runQueryOnBackgroundThread(CharSequence constraint)
       description: Runs a query with the specified constraint.
      - 
       return-value: void
       name: setDropDownViewTheme(Resources.Theme theme)
       description: Sets the Resources.Theme against which drop-down views are inflated.
      - 
       return-value: void
       name: setFilterQueryProvider(FilterQueryProvider filterQueryProvider)
       description: Sets the query filter provider used to filter the current Cursor.
      - 
       return-value: Cursor
       name: swapCursor(Cursor newCursor)
       description: Swap in a new Cursor, returning the old Cursor.
  name: android.widget.BaseAdapter
     method: 
      - 
       return-value: boolean
       name: areAllItemsEnabled()
       description: Indicates whether all the items in this adapter are enabled.
      - 
       return-value: CharSequence[]
       name: getAutofillOptions()
       description: Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.
      - 
       return-value: View
       name: getDropDownView(int position, View convertView, ViewGroup parent)
       description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
      - 
       return-value: int
       name: getItemViewType(int position)
       description: Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.
      - 
       return-value: int
       name: getViewTypeCount()
       description: 
      - 
       return-value: boolean
       name: hasStableIds()
       description: Indicates whether the item ids are stable across changes to the underlying data.
      - 
       return-value: boolean
       name: isEmpty()
      - 
       return-value: boolean
       name: isEnabled(int position)
       description: Returns true if the item at the specified position is not a separator.
      - 
       return-value: void
       name: notifyDataSetChanged()
       description: Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.
      - 
       return-value: void
       name: notifyDataSetInvalidated()
       description: Notifies the attached observers that the underlying data is no longer valid or available.
      - 
       return-value: void
       name: registerDataSetObserver(DataSetObserver observer)
       description: Register an observer that is called when changes happen to the data used by this adapter.
      - 
       return-value: void
       name: setAutofillOptions(CharSequence... options)
       description: Sets the value returned by getAutofillOptions()
      - 
       return-value: void
       name: unregisterDataSetObserver(DataSetObserver observer)
       description: Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).
  name: java.lang.Object
     method: 
      - 
       return-value: Object
       name: clone()
       description: Creates and returns a copy of this object.
      - 
       return-value: boolean
       name: equals(Object obj)
       description: Indicates whether some other object is "equal to" this one.
      - 
       return-value: void
       name: finalize()
       description: Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
      - 
       return-value: final Class<?>
       name: getClass()
       description: Returns the runtime class of this Object.
      - 
       return-value: int
       name: hashCode()
       description: Returns a hash code value for the object.
      - 
       return-value: final void
       name: notify()
       description: Wakes up a single thread that is waiting on this object's monitor.
      - 
       return-value: final void
       name: notifyAll()
       description: Wakes up all threads that are waiting on this object's monitor.
      - 
       return-value: String
       name: toString()
       description: Returns a string representation of the object.
      - 
       return-value: final void
       name: wait(long millis, int nanos)
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.
      - 
       return-value: final void
       name: wait(long millis)
       description: Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
      - 
       return-value: final void
       name: wait()
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.
  name: android.widget.Filterable
     method: 
       return-value: abstract Filter
       name: getFilter()
       description: 
  name: android.widget.ThemedSpinnerAdapter
     method: 
      - 
       return-value: abstract Resources.Theme
       name: getDropDownViewTheme()
       description: Returns the value previously set by a call to setDropDownViewTheme(Theme).
      - 
       return-value: abstract void
       name: setDropDownViewTheme(Resources.Theme theme)
       description: Sets the Resources.Theme against which drop-down views are inflated.
  name: android.widget.ListAdapter
     method: 
      - 
       return-value: abstract boolean
       name: areAllItemsEnabled()
       description: Indicates whether all the items in this adapter are enabled.
      - 
       return-value: abstract boolean
       name: isEnabled(int position)
       description: Returns true if the item at the specified position is not a separator.
  name: android.widget.SpinnerAdapter
     method: 
       return-value: abstract View
       name: getDropDownView(int position, View convertView, ViewGroup parent)
       description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
  name: android.widget.Adapter
     method: 
      - 
       return-value: default CharSequence[]
       name: getAutofillOptions()
       description: Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.
      - 
       return-value: abstract int
       name: getCount()
       description: How many items are in the data set represented by this Adapter.
      - 
       return-value: abstract Object
       name: getItem(int position)
       description: Get the data item associated with the specified position in the data set.
      - 
       return-value: abstract long
       name: getItemId(int position)
       description: Get the row id associated with the specified position in the list.
      - 
       return-value: abstract int
       name: getItemViewType(int position)
       description: Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.
      - 
       return-value: abstract View
       name: getView(int position, View convertView, ViewGroup parent)
       description: Get a View that displays the data at the specified position in the data set.
      - 
       return-value: abstract int
       name: getViewTypeCount()
       description: 
      - 
       return-value: abstract boolean
       name: hasStableIds()
       description: Indicates whether the item ids are stable across changes to the underlying data.
      - 
       return-value: abstract boolean
       name: isEmpty()
      - 
       return-value: abstract void
       name: registerDataSetObserver(DataSetObserver observer)
       description: Register an observer that is called when changes happen to the data used by this adapter.
      - 
       return-value: abstract void
       name: unregisterDataSetObserver(DataSetObserver observer)
       description: Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).
 public_constructors: 
  method: 
   - 
    name: SimpleCursorAdapter(Context context, int layout, Cursor c, String[] from, int[] to)
    description: This constructor was deprecated in API level 11. This option is discouraged, as it results in Cursor queries being performed on the application&amp;apos;s UI thread and thus can cause poor responsiveness or even Application Not Responding errors. As an alternative, use LoaderManager with a CursorLoader.
   - 
    name: SimpleCursorAdapter(Context context, int layout, Cursor c, String[] from, int[] to, int flags)
    description: Standard constructor.
 public_methods: 
  method: 
   - 
    return-value: void
    name: bindView(View view, Context context, Cursor cursor)
    description: Binds all of the field names passed into the "to" parameter of the constructor with their corresponding cursor columns as specified in the "from" parameter.
   - 
    return-value: void
    name: changeCursorAndColumns(Cursor c, String[] from, int[] to)
    description: Change the cursor and change the column-to-view mappings at the same time.
   - 
    return-value: CharSequence
    name: convertToString(Cursor cursor)
    description: Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter.
   - 
    return-value: SimpleCursorAdapter.CursorToStringConverter
    name: getCursorToStringConverter()
    description: Returns the converter used to convert the filtering Cursor into a String.
   - 
    return-value: int
    name: getStringConversionColumn()
    description: Return the index of the column used to get a String representation of the Cursor.
   - 
    return-value: SimpleCursorAdapter.ViewBinder
    name: getViewBinder()
    description: Returns the SimpleCursorAdapter.ViewBinder used to bind data to views.
   - 
    return-value: void
    name: setCursorToStringConverter(SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter)
    description: Sets the converter used to convert the filtering Cursor into a String.
   - 
    return-value: void
    name: setStringConversionColumn(int stringConversionColumn)
    description: Defines the index of the column in the Cursor used to get a String representation of that Cursor.
   - 
    return-value: void
    name: setViewBinder(SimpleCursorAdapter.ViewBinder viewBinder)
    description: Sets the binder used to bind data to views.
   - 
    return-value: void
    name: setViewImage(ImageView v, String value)
    description: Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView.
   - 
    return-value: void
    name: setViewText(TextView v, String text)
    description: Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView.
   - 
    return-value: Cursor
    name: swapCursor(Cursor c)
    description: Swap in a new Cursor, returning the old Cursor.
 api-section: 
  api: 
   - 
    name: SimpleCursorAdapter
    api_level: API level 1
    api_signature: public SimpleCursorAdapter (Context context, 
                int layout, 
                Cursor c, 
                String[] from, 
                int[] to)
    description: 
     parameters: 
      parameter: 
       - 
        name: context
        description: Context
       - 
        name: layout
        description: int
       - 
        name: c
        description: Cursor
       - 
        name: from
        description: String
       - 
        name: to
        description: int
   - 
    name: SimpleCursorAdapter
    api_level: API level 11
    api_signature: public SimpleCursorAdapter (Context context, 
                int layout, 
                Cursor c, 
                String[] from, 
                int[] to, 
                int flags)
    description: Standard constructor.
     parameters: 
      parameter: 
       - 
        name: context
        description: Context: The context where the ListView associated with this SimpleListItemFactory is running
       - 
        name: layout
        description: int: resource identifier of a layout file that defines the views for this list item. The layout file should include at least those named views defined in "to"
       - 
        name: c
        description: Cursor: The database cursor. Can be null if the cursor is not available yet.
       - 
        name: from
        description: String: A list of column names representing the data to bind to the UI. Can be null if the cursor is not available yet.
       - 
        name: to
        description: int: The views that should display column in the "from" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the from parameter. Can be null if the cursor is not available yet.
       - 
        name: flags
        description: int: Flags used to determine the behavior of the adapter, as per CursorAdapter.CursorAdapter(Context, Cursor, int).
   - 
    name: bindView
    api_level: API level 1
    api_signature: public void bindView (View view, 
                Context context, 
                Cursor cursor)
    description: Binds all of the field names passed into the "to" parameter of the constructor with their corresponding cursor columns as specified in the "from" parameter. Binding occurs in two phases. First, if a SimpleCursorAdapter.ViewBinder is available, SimpleCursorAdapter.ViewBinder.setViewValue(android.view.View, android.database.Cursor, int) is invoked. If the returned value is true, binding has occured. If the returned value is false and the view to bind is a TextView, setViewText(TextView, String) is invoked. If the returned value is false and the view to bind is an ImageView, setViewImage(ImageView, String) is invoked. If no appropriate binding can be found, an IllegalStateException is thrown.
     parameters: 
      parameter: 
       - 
        name: view
        description: View: Existing view, returned earlier by newView
       - 
        name: context
        description: Context: Interface to application's global information
       - 
        name: cursor
        description: Cursor: The cursor from which to get the data. The cursor is already moved to the correct position.
       - 
        name: IllegalStateException
        description: if binding cannot occur
   - 
    name: changeCursorAndColumns
    api_level: API level 3
    api_signature: public void changeCursorAndColumns (Cursor c, 
                String[] from, 
                int[] to)
    description: Change the cursor and change the column-to-view mappings at the same time.
     parameters: 
      parameter: 
       - 
        name: c
        description: Cursor: The database cursor. Can be null if the cursor is not available yet.
       - 
        name: from
        description: String: A list of column names representing the data to bind to the UI. Can be null if the cursor is not available yet.
       - 
        name: to
        description: int: The views that should display column in the "from" parameter. These should all be TextViews. The first N views in this list are given the values of the first N columns in the from parameter. Can be null if the cursor is not available yet.
   - 
    name: convertToString
    api_level: API level 1
    api_signature: public CharSequence convertToString (Cursor cursor)
    description: Returns a CharSequence representation of the specified Cursor as defined by the current CursorToStringConverter. If no CursorToStringConverter has been set, the String conversion column is used instead. If the conversion column is -1, the returned String is empty if the cursor is null or Cursor.toString().
     parameters: 
      parameter: 
       - 
        name: cursor
        description: Cursor: the Cursor to convert to a CharSequence
       - 
        name: CharSequence
        description: a non-null CharSequence representing the cursor
   - 
    name: getCursorToStringConverter
    api_level: API level 1
    api_signature: public SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter ()
    description: Returns the converter used to convert the filtering Cursor into a String.
     parameters: 
      parameter: 
       - 
        name: SimpleCursorAdapter.CursorToStringConverter
        description: null if the converter does not exist or an instance of SimpleCursorAdapter.CursorToStringConverter
   - 
    name: getStringConversionColumn
    api_level: API level 1
    api_signature: public int getStringConversionColumn ()
    description: Return the index of the column used to get a String representation of the Cursor.
     parameters: 
      parameter: 
       - 
        name: int
        description: a valid index in the current Cursor or -1
   - 
    name: getViewBinder
    api_level: API level 1
    api_signature: public SimpleCursorAdapter.ViewBinder getViewBinder ()
    description: Returns the SimpleCursorAdapter.ViewBinder used to bind data to views.
     parameters: 
      parameter: 
       - 
        name: SimpleCursorAdapter.ViewBinder
        description: a ViewBinder or null if the binder does not exist
   - 
    name: setCursorToStringConverter
    api_level: API level 1
    api_signature: public void setCursorToStringConverter (SimpleCursorAdapter.CursorToStringConverter cursorToStringConverter)
    description: Sets the converter used to convert the filtering Cursor into a String.
     parameters: 
      parameter: 
       - 
        name: cursorToStringConverter
        description: SimpleCursorAdapter.CursorToStringConverter: the Cursor to String converter, or null to remove the converter
   - 
    name: setStringConversionColumn
    api_level: API level 1
    api_signature: public void setStringConversionColumn (int stringConversionColumn)
    description: Defines the index of the column in the Cursor used to get a String representation of that Cursor. The column is used to convert the Cursor to a String only when the current CursorToStringConverter is null.
     parameters: 
      parameter: 
       - 
        name: stringConversionColumn
        description: int: a valid index in the current Cursor or -1 to use the default conversion mechanism
   - 
    name: setViewBinder
    api_level: API level 1
    api_signature: public void setViewBinder (SimpleCursorAdapter.ViewBinder viewBinder)
    description: Sets the binder used to bind data to views.
     parameters: 
      parameter: 
       - 
        name: viewBinder
        description: SimpleCursorAdapter.ViewBinder: the binder used to bind data to views, can be null to remove the existing binder
   - 
    name: setViewImage
    api_level: API level 1
    api_signature: public void setViewImage (ImageView v, 
                String value)
    description: Called by bindView() to set the image for an ImageView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to an ImageView. By default, the value will be treated as an image resource. If the value cannot be used as an image resource, the value is used as an image Uri. Intended to be overridden by Adapters that need to filter strings retrieved from the database.
     parameters: 
      parameter: 
       - 
        name: v
        description: ImageView: ImageView to receive an image
       - 
        name: value
        description: String: the value retrieved from the cursor
   - 
    name: setViewText
    api_level: API level 1
    api_signature: public void setViewText (TextView v, 
                String text)
    description: Called by bindView() to set the text for a TextView but only if there is no existing ViewBinder or if the existing ViewBinder cannot handle binding to a TextView. Intended to be overridden by Adapters that need to filter strings retrieved from the database.
     parameters: 
      parameter: 
       - 
        name: v
        description: TextView: TextView to receive text
       - 
        name: text
        description: String: the text to be set for the TextView
   - 
    name: swapCursor
    api_level: API level 11
    api_signature: public Cursor swapCursor (Cursor c)
    description: Swap in a new Cursor, returning the old Cursor. Unlike changeCursor(Cursor), the returned old Cursor is not closed.
     parameters: 
      parameter: 
       - 
        name: c
        description: Cursor: The new cursor to be used.
       - 
        name: Cursor
        description: Returns the previously set Cursor, or null if there wasa not one. If the given new Cursor is the same instance is the previously set Cursor, null is also returned.