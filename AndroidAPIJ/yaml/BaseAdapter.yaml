api:
 title: BaseAdapter
 api-signature: public abstract class BaseAdapter extends Object implements ListAdapter, SpinnerAdapter
 inheritance: java.lang.Object â†³ android.widget.BaseAdapter
 subclasses-direct: ArrayAdapter<T>, CursorAdapter, SimpleAdapter
 subclasses-direct-summary: 
  class: 
   - 
    name: ArrayAdapter<T>
    description: You can use this adapter to provide views for an AdapterView, Returns a view for each object in a collection of data objects you provide, and can be used with list-based user interface widgets such as ListView or Spinner.
   - 
    name: CursorAdapter
    description: Adapter that exposes data from a Cursor to a ListView widget.
   - 
    name: SimpleAdapter
    description: An easy adapter to map static data to views defined in an XML file.
 subclasses-indirect: ResourceCursorAdapter, SimpleCursorAdapter
 subclasses-indirect-summary: 
  class: 
   - 
    name: ResourceCursorAdapter
    description: An easy adapter that creates views defined in an XML file.
   - 
    name: SimpleCursorAdapter
    description: An easy adapter to map columns from a cursor to TextViews or ImageViews defined in an XML file.
 inherited_xml_attributes: 
 inherited_constants: 
  class: 
    name: android.widget.Adapter
     conctant: 
      - 
       type: int
       name: IGNORE_ITEM_VIEW_TYPE
       description:An item view type that causes the AdapterView to ignore the item view.
      - 
       type: int
       name: NO_SELECTION
       description:
 inherited_fields: 
 inherited_methods: 
  name: java.lang.Object
   class: 
     method: 
      - 
       return-value: Object
       name: clone()
       description: Creates and returns a copy of this object.
      - 
       return-value: boolean
       name: equals(Object obj)
       description: Indicates whether some other object is "equal to" this one.
      - 
       return-value: void
       name: finalize()
       description: Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
      - 
       return-value: final Class<?>
       name: getClass()
       description: Returns the runtime class of this Object.
      - 
       return-value: int
       name: hashCode()
       description: Returns a hash code value for the object.
      - 
       return-value: final void
       name: notify()
       description: Wakes up a single thread that is waiting on this object's monitor.
      - 
       return-value: final void
       name: notifyAll()
       description: Wakes up all threads that are waiting on this object's monitor.
      - 
       return-value: String
       name: toString()
       description: Returns a string representation of the object.
      - 
       return-value: final void
       name: wait(long millis, int nanos)
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.
      - 
       return-value: final void
       name: wait(long millis)
       description: Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
      - 
       return-value: final void
       name: wait()
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.
  name: android.widget.ListAdapter
     method: 
      - 
       return-value: abstract boolean
       name: areAllItemsEnabled()
       description: Indicates whether all the items in this adapter are enabled.
      - 
       return-value: abstract boolean
       name: isEnabled(int position)
       description: Returns true if the item at the specified position is not a separator.
  name: android.widget.SpinnerAdapter
     method: 
       return-value: abstract View
       name: getDropDownView(int position, View convertView, ViewGroup parent)
       description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
  name: android.widget.Adapter
     method: 
      - 
       return-value: default CharSequence[]
       name: getAutofillOptions()
       description: Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.
      - 
       return-value: abstract int
       name: getCount()
       description: How many items are in the data set represented by this Adapter.
      - 
       return-value: abstract Object
       name: getItem(int position)
       description: Get the data item associated with the specified position in the data set.
      - 
       return-value: abstract long
       name: getItemId(int position)
       description: Get the row id associated with the specified position in the list.
      - 
       return-value: abstract int
       name: getItemViewType(int position)
       description: Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.
      - 
       return-value: abstract View
       name: getView(int position, View convertView, ViewGroup parent)
       description: Get a View that displays the data at the specified position in the data set.
      - 
       return-value: abstract int
       name: getViewTypeCount()
       description: 
      - 
       return-value: abstract boolean
       name: hasStableIds()
       description: Indicates whether the item ids are stable across changes to the underlying data.
      - 
       return-value: abstract boolean
       name: isEmpty()
      - 
       return-value: abstract void
       name: registerDataSetObserver(DataSetObserver observer)
       description: Register an observer that is called when changes happen to the data used by this adapter.
      - 
       return-value: abstract void
       name: unregisterDataSetObserver(DataSetObserver observer)
       description: Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).
 public_constructors: 
  method: 
    name: BaseAdapter()
 public_methods: 
  method: 
   - 
    return-value: boolean
    name: areAllItemsEnabled()
    description: Indicates whether all the items in this adapter are enabled.
   - 
    return-value: CharSequence[]
    name: getAutofillOptions()
    description: Gets a string representation of the adapter data that can help AutofillService autofill the view backed by the adapter.
   - 
    return-value: View
    name: getDropDownView(int position, View convertView, ViewGroup parent)
    description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
   - 
    return-value: int
    name: getItemViewType(int position)
    description: Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.
   - 
    return-value: int
    name: getViewTypeCount()
    description: 
   - 
    return-value: boolean
    name: hasStableIds()
    description: Indicates whether the item ids are stable across changes to the underlying data.
   - 
    return-value: boolean
    name: isEmpty()
   - 
    return-value: boolean
    name: isEnabled(int position)
    description: Returns true if the item at the specified position is not a separator.
   - 
    return-value: void
    name: notifyDataSetChanged()
    description: Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.
   - 
    return-value: void
    name: notifyDataSetInvalidated()
    description: Notifies the attached observers that the underlying data is no longer valid or available.
   - 
    return-value: void
    name: registerDataSetObserver(DataSetObserver observer)
    description: Register an observer that is called when changes happen to the data used by this adapter.
   - 
    return-value: void
    name: setAutofillOptions(CharSequence... options)
    description: Sets the value returned by getAutofillOptions()
   - 
    return-value: void
    name: unregisterDataSetObserver(DataSetObserver observer)
    description: Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).
 api-section: 
  api: 
   - 
    name: BaseAdapter
    api_level: API level 1
    api_signature: public BaseAdapter ()
    description: 
   - 
    name: areAllItemsEnabled
    api_level: API level 1
    api_signature: public boolean areAllItemsEnabled ()
    description: Indicates whether all the items in this adapter are enabled. If the value returned by this method changes over time, there is no guarantee it will take effect. If true, it means all items are selectable and clickable (there is no separator.)
     parameters: 
      parameter: 
       - 
        name: boolean
        description: True if all items are enabled, false otherwise.
   - 
    name: getDropDownView
    api_level: API level 1
    api_signature: public View getDropDownView (int position, 
                View convertView, 
                ViewGroup parent)
    description: Gets a View that displays in the drop down popup the data at the specified position in the data set.
     parameters: 
      parameter: 
       - 
        name: position
        description: int: index of the item whose view we want.
       - 
        name: convertView
        description: View: the old view to reuse, if possible. Note: You should check that this view is non-null and of an appropriate type before using. If it is not possible to convert this view to display the correct data, this method can create a new view.
       - 
        name: parent
        description: ViewGroup: the parent that this view will eventually be attached to
       - 
        name: View
        description: a View corresponding to the data at the specified position.
   - 
    name: getItemViewType
    api_level: API level 1
    api_signature: public int getItemViewType (int position)
    description: Get the type of View that will be created by getView(int, View, ViewGroup) for the specified item.
     parameters: 
      parameter: 
       - 
        name: position
        description: int: The position of the item within the adapter's data set whose view type we want.
       - 
        name: int
        description: An integer representing the type of View. Two views should share the same type if one can be converted to the other in getView(int, View, ViewGroup). Note: Integers must be in the range 0 to getViewTypeCount() - 1. IGNORE_ITEM_VIEW_TYPE can also be returned.
   - 
    name: getViewTypeCount
    api_level: API level 1
    api_signature: public int getViewTypeCount ()
    description: 
     parameters: 
      parameter: 
       - 
        name: int
        description: The number of types of Views that will be created by this adapter
   - 
    name: hasStableIds
    api_level: API level 1
    api_signature: public boolean hasStableIds ()
    description: Indicates whether the item ids are stable across changes to the underlying data.
     parameters: 
      parameter: 
       - 
        name: boolean
        description: True if the same id always refers to the same object.
   - 
    name: isEmpty
    api_level: API level 1
    api_signature: public boolean isEmpty ()
    description: 
     parameters: 
      parameter: 
       - 
        name: boolean
        description: 
   - 
    name: isEnabled
    api_level: API level 1
    api_signature: public boolean isEnabled (int position)
    description: Returns true if the item at the specified position is not a separator. (A separator is a non-selectable, non-clickable item). The result is unspecified if position is invalid. An ArrayIndexOutOfBoundsException should be thrown in that case for fast failure.
     parameters: 
      parameter: 
       - 
        name: position
        description: int: Index of the item
       - 
        name: boolean
        description: True if the item is not a separator
   - 
    name: notifyDataSetChanged
    api_level: API level 1
    api_signature: public void notifyDataSetChanged ()
    description: Notifies the attached observers that the underlying data has been changed and any View reflecting the data set should refresh itself.
   - 
    name: notifyDataSetInvalidated
    api_level: API level 1
    api_signature: public void notifyDataSetInvalidated ()
    description: Notifies the attached observers that the underlying data is no longer valid or available. Once invoked this adapter is no longer valid and should not report further data set changes.
   - 
    name: registerDataSetObserver
    api_level: API level 1
    api_signature: public void registerDataSetObserver (DataSetObserver observer)
    description: Register an observer that is called when changes happen to the data used by this adapter.
     parameters: 
      parameter: 
       - 
        name: observer
        description: DataSetObserver: the object that gets notified when the data set changes.
   - 
    name: setAutofillOptions
    api_level: API level 27
    api_signature: public void setAutofillOptions (CharSequence... options)
    description: Sets the value returned by getAutofillOptions()
     parameters: 
      parameter: 
       - 
        name: options
        description: CharSequence This value may be null.
   - 
    name: unregisterDataSetObserver
    api_level: API level 1
    api_signature: public void unregisterDataSetObserver (DataSetObserver observer)
    description: Unregister an observer that has previously been registered with this adapter via registerDataSetObserver(DataSetObserver).
     parameters: 
      parameter: 
       - 
        name: observer
        description: DataSetObserver: the object to unregister.