api:
 title: RemoteViewsService
 api-signature: public abstract class RemoteViewsService extends Service
 inheritance: java.lang.Object ↳ android.content.Context ↳ android.content.ContextWrapper ↳ android.app.Service ↳ android.widget.RemoteViewsService
 subclasses-direct-summary: 
 subclasses-indirect-summary: 
 inherited_xml_attributes: 
 inherited_constants: 
  class: 
   - 
    name: android.app.Service
     conctant: 
      - 
       type: int
       name: START_CONTINUATION_MASK
       description:Bits returned by onStartCommand(Intent, int, int) describing how to continue the service if it is killed.
      - 
       type: int
       name: START_FLAG_REDELIVERY
       description:This flag is set in onStartCommand(Intent, int, int) if the Intent is a re-delivery of a previously delivered intent, because the service had previously returned START_REDELIVER_INTENT but had been killed before calling stopSelf(int) for that Intent.
      - 
       type: int
       name: START_FLAG_RETRY
       description:This flag is set in onStartCommand(Intent, int, int) if the Intent is a retry because the original attempt never got to or returned from onStartCommand(Intent, int, int).
      - 
       type: int
       name: START_NOT_STICKY
       description:Constant to return from onStartCommand(Intent, int, int): if this service's process is killed while it is started (after returning from onStartCommand(Intent, int, int)), and there are no new start intents to deliver to it, then take the service out of the started state and don't recreate until a future explicit call to Context.startService(Intent).
      - 
       type: int
       name: START_REDELIVER_INTENT
       description:Constant to return from onStartCommand(Intent, int, int): if this service's process is killed while it is started (after returning from onStartCommand(Intent, int, int)), then it will be scheduled for a restart and the last delivered Intent re-delivered to it again via onStartCommand(Intent, int, int).
      - 
       type: int
       name: START_STICKY
       description:Constant to return from onStartCommand(Intent, int, int): if this service's process is killed while it is started (after returning from onStartCommand(Intent, int, int)), then leave it in the started state but don't retain this delivered intent.
      - 
       type: int
       name: START_STICKY_COMPATIBILITY
       description:Constant to return from onStartCommand(Intent, int, int): compatibility version of START_STICKY that does not guarantee that onStartCommand(Intent, int, int) will be called again after being killed.
      - 
       type: int
       name: STOP_FOREGROUND_DETACH
       description:Flag for stopForeground(int): if set, the notification previously provided to startForeground(int, Notification) will be detached from the service.
      - 
       type: int
       name: STOP_FOREGROUND_REMOVE
       description:Flag for stopForeground(int): if set, the notification previously provided to startForeground(int, Notification) will be removed.
   - 
    name: android.content.Context
     conctant: 
      - 
       type: String
       name: ACCESSIBILITY_SERVICE
       description:Use with getSystemService(String) to retrieve a AccessibilityManager for giving the user feedback for UI events through the registered event listeners.
      - 
       type: String
       name: ACCOUNT_SERVICE
       description:Use with getSystemService(String) to retrieve a AccountManager for receiving intents at a time of your choosing.
      - 
       type: String
       name: ACTIVITY_SERVICE
       description:Use with getSystemService(String) to retrieve a ActivityManager for interacting with the global system state.
      - 
       type: String
       name: ALARM_SERVICE
       description:Use with getSystemService(String) to retrieve a AlarmManager for receiving intents at a time of your choosing.
      - 
       type: String
       name: APPWIDGET_SERVICE
       description:Use with getSystemService(String) to retrieve a AppWidgetManager for accessing AppWidgets.
      - 
       type: String
       name: APP_OPS_SERVICE
       description:Use with getSystemService(String) to retrieve a AppOpsManager for tracking application operations on the device.
      - 
       type: String
       name: AUDIO_SERVICE
       description:Use with getSystemService(String) to retrieve a AudioManager for handling management of volume, ringer modes and audio routing.
      - 
       type: String
       name: BATTERY_SERVICE
       description:Use with getSystemService(String) to retrieve a BatteryManager for managing battery state.
      - 
       type: int
       name: BIND_ABOVE_CLIENT
       description:Flag for bindService(Intent, ServiceConnection, int): indicates that the client application binding to this service considers the service to be more important than the app itself.
      - 
       type: int
       name: BIND_ADJUST_WITH_ACTIVITY
       description:Flag for bindService(Intent, ServiceConnection, int): If binding from an activity, allow the target service's process importance to be raised based on whether the activity is visible to the user, regardless whether another flag is used to reduce the amount that the client process's overall importance is used to impact it.
      - 
       type: int
       name: BIND_ALLOW_OOM_MANAGEMENT
       description:Flag for bindService(Intent, ServiceConnection, int): allow the process hosting the bound service to go through its normal memory management.
      - 
       type: int
       name: BIND_AUTO_CREATE
       description:Flag for bindService(Intent, ServiceConnection, int): automatically create the service as long as the binding exists.
      - 
       type: int
       name: BIND_DEBUG_UNBIND
       description:Flag for bindService(Intent, ServiceConnection, int): include debugging help for mismatched calls to unbind.
      - 
       type: int
       name: BIND_EXTERNAL_SERVICE
       description:Flag for bindService(Intent, ServiceConnection, int): The service being bound is an isolated, external service.
      - 
       type: int
       name: BIND_IMPORTANT
       description:Flag for bindService(Intent, ServiceConnection, int): this service is very important to the client, so should be brought to the foreground process level when the client is.
      - 
       type: int
       name: BIND_NOT_FOREGROUND
       description:Flag for bindService(Intent, ServiceConnection, int): don't allow this binding to raise the target service's process to the foreground scheduling priority.
      - 
       type: int
       name: BIND_WAIVE_PRIORITY
       description:Flag for bindService(Intent, ServiceConnection, int): don't impact the scheduling or memory management priority of the target service's hosting process.
      - 
       type: String
       name: BLUETOOTH_SERVICE
       description:Use with getSystemService(String) to retrieve a BluetoothManager for using Bluetooth.
      - 
       type: String
       name: CAMERA_SERVICE
       description:Use with getSystemService(String) to retrieve a CameraManager for interacting with camera devices.
      - 
       type: String
       name: CAPTIONING_SERVICE
       description:Use with getSystemService(String) to retrieve a CaptioningManager for obtaining captioning properties and listening for changes in captioning preferences.
      - 
       type: String
       name: CARRIER_CONFIG_SERVICE
       description:Use with getSystemService(String) to retrieve a CarrierConfigManager for reading carrier configuration values.
      - 
       type: String
       name: CLIPBOARD_SERVICE
       description:Use with getSystemService(String) to retrieve a ClipboardManager for accessing and modifying the contents of the global clipboard.
      - 
       type: String
       name: COMPANION_DEVICE_SERVICE
       description:Use with getSystemService(String) to retrieve a CompanionDeviceManager for managing companion devices
      - 
       type: String
       name: CONNECTIVITY_SERVICE
       description:Use with getSystemService(String) to retrieve a ConnectivityManager for handling management of network connections.
      - 
       type: String
       name: CONSUMER_IR_SERVICE
       description:Use with getSystemService(String) to retrieve a ConsumerIrManager for transmitting infrared signals from the device.
      - 
       type: int
       name: CONTEXT_IGNORE_SECURITY
       description:Flag for use with createPackageContext(String, int): ignore any security restrictions on the Context being requested, allowing it to always be loaded.
      - 
       type: int
       name: CONTEXT_INCLUDE_CODE
       description:Flag for use with createPackageContext(String, int): include the application code with the context.
      - 
       type: int
       name: CONTEXT_RESTRICTED
       description:Flag for use with createPackageContext(String, int): a restricted context may disable specific features.
      - 
       type: String
       name: CROSS_PROFILE_APPS_SERVICE
       description:Use with getSystemService(String) to retrieve a CrossProfileApps for cross profile operations.
      - 
       type: String
       name: DEVICE_POLICY_SERVICE
       description:Use with getSystemService(String) to retrieve a DevicePolicyManager for working with global device policy management.
      - 
       type: String
       name: DISPLAY_SERVICE
       description:Use with getSystemService(String) to retrieve a DisplayManager for interacting with display devices.
      - 
       type: String
       name: DOWNLOAD_SERVICE
       description:Use with getSystemService(String) to retrieve a DownloadManager for requesting HTTP downloads.
      - 
       type: String
       name: DROPBOX_SERVICE
       description:Use with getSystemService(String) to retrieve a DropBoxManager instance for recording diagnostic logs.
      - 
       type: String
       name: EUICC_SERVICE
       description:Use with getSystemService(String) to retrieve a EuiccManager to manage the device eUICC (embedded SIM).
      - 
       type: String
       name: FINGERPRINT_SERVICE
       description:Use with getSystemService(String) to retrieve a FingerprintManager for handling management of fingerprints.
      - 
       type: String
       name: HARDWARE_PROPERTIES_SERVICE
       description:Use with getSystemService(String) to retrieve a HardwarePropertiesManager for accessing the hardware properties service.
      - 
       type: String
       name: INPUT_METHOD_SERVICE
       description:Use with getSystemService(String) to retrieve a InputMethodManager for accessing input methods.
      - 
       type: String
       name: INPUT_SERVICE
       description:Use with getSystemService(String) to retrieve a InputManager for interacting with input devices.
      - 
       type: String
       name: IPSEC_SERVICE
       description:Use with getSystemService(String) to retrieve a IpSecManager for encrypting Sockets or Networks with IPSec.
      - 
       type: String
       name: JOB_SCHEDULER_SERVICE
       description:Use with getSystemService(String) to retrieve a JobScheduler instance for managing occasional background tasks.
      - 
       type: String
       name: KEYGUARD_SERVICE
       description:Use with getSystemService(String) to retrieve a NotificationManager for controlling keyguard.
      - 
       type: String
       name: LAUNCHER_APPS_SERVICE
       description:Use with getSystemService(String) to retrieve a LauncherApps for querying and monitoring launchable apps across profiles of a user.
      - 
       type: String
       name: LAYOUT_INFLATER_SERVICE
       description:Use with getSystemService(String) to retrieve a LayoutInflater for inflating layout resources in this context.
      - 
       type: String
       name: LOCATION_SERVICE
       description:Use with getSystemService(String) to retrieve a LocationManager for controlling location updates.
      - 
       type: String
       name: MEDIA_PROJECTION_SERVICE
       description:Use with getSystemService(String) to retrieve a MediaProjectionManager instance for managing media projection sessions.
      - 
       type: String
       name: MEDIA_ROUTER_SERVICE
       description:Use with getSystemService(String) to retrieve a MediaRouter for controlling and managing routing of media.
      - 
       type: String
       name: MEDIA_SESSION_SERVICE
       description:Use with getSystemService(String) to retrieve a MediaSessionManager for managing media Sessions.
      - 
       type: String
       name: MIDI_SERVICE
       description:Use with getSystemService(String) to retrieve a MidiManager for accessing the MIDI service.
      - 
       type: int
       name: MODE_APPEND
       description:File creation mode: for use with openFileOutput(String, int), if the file already exists then write data to the end of the existing file instead of erasing it.
      - 
       type: int
       name: MODE_ENABLE_WRITE_AHEAD_LOGGING
       description:Database open flag: when set, the database is opened with write-ahead logging enabled by default.
      - 
       type: int
       name: MODE_MULTI_PROCESS
       description:This constant was deprecated in API level 23. MODE_MULTI_PROCESS does not work reliably in some versions of Android, and furthermore does not provide any mechanism for reconciling concurrent modifications across processes. Applications should not attempt to use it. Instead, they should use an explicit cross-process data management approach such as ContentProvider.
      - 
       type: int
       name: MODE_NO_LOCALIZED_COLLATORS
       description:Database open flag: when set, the database is opened without support for localized collators.
      - 
       type: int
       name: MODE_PRIVATE
       description:File creation mode: the default mode, where the created file can only be accessed by the calling application (or all applications sharing the same user ID).
      - 
       type: int
       name: MODE_WORLD_READABLE
       description:This constant was deprecated in API level 17. Creating world-readable files is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanism for interactions such as ContentProvider, BroadcastReceiver, and Service. There are no guarantees that this access mode will remain on a file, such as when it goes through a backup and restore.
      - 
       type: int
       name: MODE_WORLD_WRITEABLE
       description:This constant was deprecated in API level 17. Creating world-writable files is very dangerous, and likely to cause security holes in applications. It is strongly discouraged; instead, applications should use more formal mechanism for interactions such as ContentProvider, BroadcastReceiver, and Service. There are no guarantees that this access mode will remain on a file, such as when it goes through a backup and restore.
      - 
       type: String
       name: NETWORK_STATS_SERVICE
       description:Use with getSystemService(String) to retrieve a NetworkStatsManager for querying network usage stats.
      - 
       type: String
       name: NFC_SERVICE
       description:Use with getSystemService(String) to retrieve a NfcManager for using NFC.
      - 
       type: String
       name: NOTIFICATION_SERVICE
       description:Use with getSystemService(String) to retrieve a NotificationManager for informing the user of background events.
      - 
       type: String
       name: NSD_SERVICE
       description:Use with getSystemService(String) to retrieve a NsdManager for handling management of network service discovery
      - 
       type: String
       name: POWER_SERVICE
       description:Use with getSystemService(String) to retrieve a PowerManager for controlling power management, including "wake locks," which let you keep the device on while you're running long tasks.
      - 
       type: String
       name: PRINT_SERVICE
       description:PrintManager for printing and managing printers and print tasks.
      - 
       type: int
       name: RECEIVER_VISIBLE_TO_INSTANT_APPS
       description:Flag for registerReceiver(BroadcastReceiver, IntentFilter): The receiver can receive broadcasts from Instant Apps.
      - 
       type: String
       name: RESTRICTIONS_SERVICE
       description:Use with getSystemService(String) to retrieve a RestrictionsManager for retrieving application restrictions and requesting permissions for restricted operations.
      - 
       type: String
       name: SEARCH_SERVICE
       description:Use with getSystemService(String) to retrieve a SearchManager for handling searches.
      - 
       type: String
       name: SENSOR_SERVICE
       description:Use with getSystemService(String) to retrieve a SensorManager for accessing sensors.
      - 
       type: String
       name: SHORTCUT_SERVICE
       description:Use with getSystemService(String) to retrieve a ShortcutManager for accessing the launcher shortcut service.
      - 
       type: String
       name: STORAGE_SERVICE
       description:Use with getSystemService(String) to retrieve a StorageManager for accessing system storage functions.
      - 
       type: String
       name: STORAGE_STATS_SERVICE
       description:Use with getSystemService(String) to retrieve a StorageStatsManager for accessing system storage statistics.
      - 
       type: String
       name: SYSTEM_HEALTH_SERVICE
       description:Use with getSystemService(String) to retrieve a SystemHealthManager for accessing system health (battery, power, memory, etc) metrics.
      - 
       type: String
       name: TELECOM_SERVICE
       description:Use with getSystemService(String) to retrieve a TelecomManager to manage telecom-related features of the device.
      - 
       type: String
       name: TELEPHONY_SERVICE
       description:Use with getSystemService(String) to retrieve a TelephonyManager for handling management the telephony features of the device.
      - 
       type: String
       name: TELEPHONY_SUBSCRIPTION_SERVICE
       description:Use with getSystemService(String) to retrieve a SubscriptionManager for handling management the telephony subscriptions of the device.
      - 
       type: String
       name: TEXT_CLASSIFICATION_SERVICE
       description:Use with getSystemService(String) to retrieve a TextClassificationManager for text classification services.
      - 
       type: String
       name: TEXT_SERVICES_MANAGER_SERVICE
       description:Use with getSystemService(String) to retrieve a TextServicesManager for accessing text services.
      - 
       type: String
       name: TV_INPUT_SERVICE
       description:Use with getSystemService(String) to retrieve a TvInputManager for interacting with TV inputs on the device.
      - 
       type: String
       name: UI_MODE_SERVICE
       description:Use with getSystemService(String) to retrieve a UiModeManager for controlling UI modes.
      - 
       type: String
       name: USAGE_STATS_SERVICE
       description:Use with getSystemService(String) to retrieve a UsageStatsManager for querying device usage stats.
      - 
       type: String
       name: USB_SERVICE
       description:Use with getSystemService(String) to retrieve a UsbManager for access to USB devices (as a USB host) and for controlling this device's behavior as a USB device.
      - 
       type: String
       name: USER_SERVICE
       description:Use with getSystemService(String) to retrieve a UserManager for managing users on devices that support multiple users.
      - 
       type: String
       name: VIBRATOR_SERVICE
       description:Use with getSystemService(String) to retrieve a Vibrator for interacting with the vibration hardware.
      - 
       type: String
       name: WALLPAPER_SERVICE
       description:Use with getSystemService(String) to retrieve a com.android.server.WallpaperService for accessing wallpapers.
      - 
       type: String
       name: WIFI_AWARE_SERVICE
       description:Use with getSystemService(String) to retrieve a WifiAwareManager for handling management of Wi-Fi Aware.
      - 
       type: String
       name: WIFI_P2P_SERVICE
       description:Use with getSystemService(String) to retrieve a WifiP2pManager for handling management of Wi-Fi peer-to-peer connections.
      - 
       type: String
       name: WIFI_RTT_RANGING_SERVICE
       description:Use with getSystemService(String) to retrieve a WifiRttManager for ranging devices with wifi Note: this is a replacement for WIFI_RTT_SERVICE above.
      - 
       type: String
       name: WIFI_SERVICE
       description:Use with getSystemService(String) to retrieve a WifiManager for handling management of Wi-Fi access.
      - 
       type: String
       name: WINDOW_SERVICE
       description:Use with getSystemService(String) to retrieve a WindowManager for accessing the system's window manager.
   - 
    name: android.content.ComponentCallbacks2
     conctant: 
      - 
       type: int
       name: TRIM_MEMORY_BACKGROUND
       description:Level for onTrimMemory(int): the process has gone on to the LRU list.
      - 
       type: int
       name: TRIM_MEMORY_COMPLETE
       description:Level for onTrimMemory(int): the process is nearing the end of the background LRU list, and if more memory isn't found soon it will be killed.
      - 
       type: int
       name: TRIM_MEMORY_MODERATE
       description:Level for onTrimMemory(int): the process is around the middle of the background LRU list; freeing memory can help the system keep other processes running later in the list for better overall performance.
      - 
       type: int
       name: TRIM_MEMORY_RUNNING_CRITICAL
       description:Level for onTrimMemory(int): the process is not an expendable background process, but the device is running extremely low on memory and is about to not be able to keep any background processes running.
      - 
       type: int
       name: TRIM_MEMORY_RUNNING_LOW
       description:Level for onTrimMemory(int): the process is not an expendable background process, but the device is running low on memory.
      - 
       type: int
       name: TRIM_MEMORY_RUNNING_MODERATE
       description:Level for onTrimMemory(int): the process is not an expendable background process, but the device is running moderately low on memory.
      - 
       type: int
       name: TRIM_MEMORY_UI_HIDDEN
       description:Level for onTrimMemory(int): the process had been showing a user interface, and is no longer doing so.
 inherited_fields: 
 inherited_methods: 
  name: android.app.Service
   class: 
     method: 
      - 
       return-value: void
       name: dump(FileDescriptor fd, PrintWriter writer, String[] args)
       description: Print the Service's state into the given stream.
      - 
       return-value: final Application
       name: getApplication()
       description: Return the application that owns this service.
      - 
       return-value: abstract IBinder
       name: onBind(Intent intent)
       description: Return the communication channel to the service.
      - 
       return-value: void
       name: onConfigurationChanged(Configuration newConfig)
       description: Called by the system when the device configuration changes while your component is running.
      - 
       return-value: void
       name: onCreate()
       description: Called by the system when the service is first created.
      - 
       return-value: void
       name: onDestroy()
       description: Called by the system to notify a Service that it is no longer used and is being removed.
      - 
       return-value: void
       name: onLowMemory()
       description: This is called when the overall system is running low on memory, and actively running processes should trim their memory usage.
      - 
       return-value: void
       name: onRebind(Intent intent)
       description: Called when new clients have connected to the service, after it had previously been notified that all had disconnected in its onUnbind(Intent).
      - 
       return-value: void
       name: onStart(Intent intent, int startId)
       description: This method was deprecated in API level 5. Implement onStartCommand(Intent, int, int) instead.
      - 
       return-value: int
       name: onStartCommand(Intent intent, int flags, int startId)
       description: Called by the system every time a client explicitly starts the service by calling Context.startService(Intent), providing the arguments it supplied and a unique integer token representing the start request.
      - 
       return-value: void
       name: onTaskRemoved(Intent rootIntent)
       description: This is called if the service is currently running and the user has removed a task that comes from the service's application.
      - 
       return-value: void
       name: onTrimMemory(int level)
       description: Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process.
      - 
       return-value: boolean
       name: onUnbind(Intent intent)
       description: Called when all clients have disconnected from a particular interface published by the service.
      - 
       return-value: final void
       name: startForeground(int id, Notification notification)
       description: If your service is started (running through Context.startService(Intent)), then also make this service run in the foreground, supplying the ongoing notification to be shown to the user while in this state.
      - 
       return-value: final void
       name: stopForeground(int flags)
       description: Remove this service from foreground state, allowing it to be killed if more memory is needed.
      - 
       return-value: final void
       name: stopForeground(boolean removeNotification)
       description: Synonym for stopForeground(int).
      - 
       return-value: final void
       name: stopSelf()
       description: Stop the service, if it was previously started.
      - 
       return-value: final void
       name: stopSelf(int startId)
       description: Old version of stopSelfResult(int) that doesn't return a result.
      - 
       return-value: final boolean
       name: stopSelfResult(int startId)
       description: Stop the service if the most recent time it was started was startId.
  name: android.content.ContextWrapper
     method: 
      - 
       return-value: void
       name: attachBaseContext(Context base)
       description: Set the base context for this ContextWrapper.
      - 
       return-value: boolean
       name: bindService(Intent service, ServiceConnection conn, int flags)
       description: Connect to an application service, creating it if needed.
      - 
       return-value: int
       name: checkCallingOrSelfPermission(String permission)
       description: Determine whether the calling process of an IPC or you have been granted a particular permission.
      - 
       return-value: int
       name: checkCallingOrSelfUriPermission(Uri uri, int modeFlags)
       description: Determine whether the calling process of an IPC or you has been granted permission to access a specific URI.
      - 
       return-value: int
       name: checkCallingPermission(String permission)
       description: Determine whether the calling process of an IPC you are handling has been granted a particular permission.
      - 
       return-value: int
       name: checkCallingUriPermission(Uri uri, int modeFlags)
       description: Determine whether the calling process and user ID has been granted permission to access a specific URI.
      - 
       return-value: int
       name: checkPermission(String permission, int pid, int uid)
       description: Determine whether the given permission is allowed for a particular process and user ID running in the system.
      - 
       return-value: int
       name: checkSelfPermission(String permission)
       description: Determine whether you have been granted a particular permission.
      - 
       return-value: int
       name: checkUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags)
       description: Check both a Uri and normal permission.
      - 
       return-value: int
       name: checkUriPermission(Uri uri, int pid, int uid, int modeFlags)
       description: Determine whether a particular process and user ID has been granted permission to access a specific URI.
      - 
       return-value: void
       name: clearWallpaper()
       description: This method was deprecated in API level 23. Use WallpaperManager.clear() instead.
      - 
       return-value: Context
       name: createConfigurationContext(Configuration overrideConfiguration)
       description: Return a new Context object for the current Context but whose resources are adjusted to match the given Configuration.
      - 
       return-value: Context
       name: createDeviceProtectedStorageContext()
       description: Return a new Context object for the current Context but whose storage APIs are backed by device-protected storage.
      - 
       return-value: Context
       name: createDisplayContext(Display display)
       description: Return a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display.
      - 
       return-value: Context
       name: createPackageContext(String packageName, int flags)
       description: Return a new Context object for the given application name.
      - 
       return-value: String[]
       name: databaseList()
       description: Returns an array of strings naming the private databases associated with this Context's application package.
      - 
       return-value: boolean
       name: deleteDatabase(String name)
       description: Delete an existing private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: boolean
       name: deleteFile(String name)
       description: Delete the given private file associated with this Context's application package.
      - 
       return-value: boolean
       name: deleteSharedPreferences(String name)
       description: Delete an existing shared preferences file.
      - 
       return-value: void
       name: enforceCallingOrSelfPermission(String permission, String message)
       description: If neither you nor the calling process of an IPC you are handling has been granted a particular permission, throw a SecurityException.
      - 
       return-value: void
       name: enforceCallingOrSelfUriPermission(Uri uri, int modeFlags, String message)
       description: If the calling process of an IPC or you has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: void
       name: enforceCallingPermission(String permission, String message)
       description: If the calling process of an IPC you are handling has not been granted a particular permission, throw a SecurityException.
      - 
       return-value: void
       name: enforceCallingUriPermission(Uri uri, int modeFlags, String message)
       description: If the calling process and user ID has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: void
       name: enforcePermission(String permission, int pid, int uid, String message)
       description: If the given permission is not allowed for a particular process and user ID running in the system, throw a SecurityException.
      - 
       return-value: void
       name: enforceUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message)
       description: Enforce both a Uri and normal permission.
      - 
       return-value: void
       name: enforceUriPermission(Uri uri, int pid, int uid, int modeFlags, String message)
       description: If a particular process and user ID has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: String[]
       name: fileList()
       description: Returns an array of strings naming the private files associated with this Context's application package.
      - 
       return-value: Context
       name: getApplicationContext()
       description: Return the context of the single, global Application object of the current process.
      - 
       return-value: ApplicationInfo
       name: getApplicationInfo()
       description: Return the full application info for this context's package.
      - 
       return-value: AssetManager
       name: getAssets()
       description: Returns an AssetManager instance for the application's package.
      - 
       return-value: Context
       name: getBaseContext()
      - 
       return-value: File
       name: getCacheDir()
       description: Returns the absolute path to the application specific cache directory on the filesystem.
      - 
       return-value: ClassLoader
       name: getClassLoader()
       description: Return a class loader you can use to retrieve classes in this package.
      - 
       return-value: File
       name: getCodeCacheDir()
       description: Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code.
      - 
       return-value: ContentResolver
       name: getContentResolver()
       description: Return a ContentResolver instance for your application's package.
      - 
       return-value: File
       name: getDataDir()
       description: Returns the absolute path to the directory on the filesystem where all private files belonging to this app are stored.
      - 
       return-value: File
       name: getDatabasePath(String name)
       description: Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored.
      - 
       return-value: File
       name: getDir(String name, int mode)
       description: Retrieve, creating if needed, a new directory in which the application can place its own custom data files.
      - 
       return-value: File
       name: getExternalCacheDir()
       description: Returns absolute path to application-specific directory on the primary shared/external storage device where the application can place cache files it owns.
      - 
       return-value: File[]
       name: getExternalCacheDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place cache files it owns.
      - 
       return-value: File
       name: getExternalFilesDir(String type)
       description: Returns the absolute path to the directory on the primary shared/external storage device where the application can place persistent files it owns.
      - 
       return-value: File[]
       name: getExternalFilesDirs(String type)
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place persistent files it owns.
      - 
       return-value: File[]
       name: getExternalMediaDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place media files.
      - 
       return-value: File
       name: getFileStreamPath(String name)
       description: Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored.
      - 
       return-value: File
       name: getFilesDir()
       description: Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored.
      - 
       return-value: Executor
       name: getMainExecutor()
       description: Return an Executor that will run enqueued tasks on the main thread associated with this context.
      - 
       return-value: Looper
       name: getMainLooper()
       description: Return the Looper for the main thread of the current process.
      - 
       return-value: File
       name: getNoBackupFilesDir()
       description: Returns the absolute path to the directory on the filesystem similar to getFilesDir().
      - 
       return-value: File
       name: getObbDir()
       description: Return the primary shared/external storage directory where this application's OBB files (if there are any) can be found.
      - 
       return-value: File[]
       name: getObbDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application's OBB files (if there are any) can be found.
      - 
       return-value: String
       name: getPackageCodePath()
       description: Return the full path to this context's primary Android package.
      - 
       return-value: PackageManager
       name: getPackageManager()
       description: Return PackageManager instance to find global package information.
      - 
       return-value: String
       name: getPackageName()
       description: Return the name of this application's package.
      - 
       return-value: String
       name: getPackageResourcePath()
       description: Return the full path to this context's primary Android package.
      - 
       return-value: Resources
       name: getResources()
       description: Returns a Resources instance for the application's package.
      - 
       return-value: SharedPreferences
       name: getSharedPreferences(String name, int mode)
       description: Retrieve and hold the contents of the preferences file 'name', returning a SharedPreferences through which you can retrieve and modify its values.
      - 
       return-value: Object
       name: getSystemService(String name)
       description: Return the handle to a system-level service by name.
      - 
       return-value: String
       name: getSystemServiceName(Class<?> serviceClass)
       description: Gets the name of the system-level service that is represented by the specified class.
      - 
       return-value: Resources.Theme
       name: getTheme()
       description: Return the Theme object associated with this Context.
      - 
       return-value: Drawable
       name: getWallpaper()
       description: This method was deprecated in API level 23. Use WallpaperManager.get() instead.
      - 
       return-value: int
       name: getWallpaperDesiredMinimumHeight()
       description: This method was deprecated in API level 23. Use WallpaperManager.getDesiredMinimumHeight() instead.
      - 
       return-value: int
       name: getWallpaperDesiredMinimumWidth()
       description: This method was deprecated in API level 23. Use WallpaperManager.getDesiredMinimumWidth() instead.
      - 
       return-value: void
       name: grantUriPermission(String toPackage, Uri uri, int modeFlags)
       description: Grant permission to access a specific Uri to another package, regardless of whether that package has general permission to access the Uri's content provider.
      - 
       return-value: boolean
       name: isDeviceProtectedStorage()
       description: Indicates if the storage APIs of this Context are backed by device-protected storage.
      - 
       return-value: boolean
       name: isRestricted()
       description: Indicates whether this Context is restricted.
      - 
       return-value: boolean
       name: moveDatabaseFrom(Context sourceContext, String name)
       description: Move an existing database file from the given source storage context to this context.
      - 
       return-value: boolean
       name: moveSharedPreferencesFrom(Context sourceContext, String name)
       description: Move an existing shared preferences file from the given source storage context to this context.
      - 
       return-value: FileInputStream
       name: openFileInput(String name)
       description: Open a private file associated with this Context's application package for reading.
      - 
       return-value: FileOutputStream
       name: openFileOutput(String name, int mode)
       description: Open a private file associated with this Context's application package for writing.
      - 
       return-value: SQLiteDatabase
       name: openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler)
       description: Open a new private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: SQLiteDatabase
       name: openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory)
       description: Open a new private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: Drawable
       name: peekWallpaper()
       description: This method was deprecated in API level 23. Use WallpaperManager.peek() instead.
      - 
       return-value: Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter)
       description: Register a BroadcastReceiver to be run in the main activity thread.
      - 
       return-value: Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, int flags)
       description: Register to receive intent broadcasts, with the receiver optionally being exposed to Instant Apps.
      - 
       return-value: Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler, int flags)
       description: Register to receive intent broadcasts, to run in the context of scheduler.
      - 
       return-value: Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler)
       description: Register to receive intent broadcasts, to run in the context of scheduler.
      - 
       return-value: void
       name: removeStickyBroadcast(Intent intent)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: removeStickyBroadcastAsUser(Intent intent, UserHandle user)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: revokeUriPermission(Uri uri, int modeFlags)
       description: Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int) or any other mechanism.
      - 
       return-value: void
       name: revokeUriPermission(String targetPackage, Uri uri, int modeFlags)
       description: Remove permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int) for a specific target package.
      - 
       return-value: void
       name: sendBroadcast(Intent intent, String receiverPermission)
       description: Broadcast the given intent to all interested BroadcastReceivers, allowing an optional required permission to be enforced.
      - 
       return-value: void
       name: sendBroadcast(Intent intent)
       description: Broadcast the given intent to all interested BroadcastReceivers.
      - 
       return-value: void
       name: sendBroadcastAsUser(Intent intent, UserHandle user)
       description: Version of sendBroadcast(Intent) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: void
       name: sendBroadcastAsUser(Intent intent, UserHandle user, String receiverPermission)
       description: Version of sendBroadcast(Intent, String) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: void
       name: sendOrderedBroadcast(Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: Version of sendBroadcast(Intent) that allows you to receive data back from the broadcast.
      - 
       return-value: void
       name: sendOrderedBroadcast(Intent intent, String receiverPermission)
       description: Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers.
      - 
       return-value: void
       name: sendOrderedBroadcastAsUser(Intent intent, UserHandle user, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: Version of sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: void
       name: sendStickyBroadcast(Intent intent)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: sendStickyBroadcastAsUser(Intent intent, UserHandle user)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: sendStickyOrderedBroadcast(Intent intent, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: sendStickyOrderedBroadcastAsUser(Intent intent, UserHandle user, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: This method was deprecated in API level 23. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: void
       name: setTheme(int resid)
       description: Set the base theme for this context.
      - 
       return-value: void
       name: setWallpaper(Bitmap bitmap)
       description: This method was deprecated in API level 23. Use WallpaperManager.set() instead.
      - 
       return-value: void
       name: setWallpaper(InputStream data)
       description: This method was deprecated in API level 23. Use WallpaperManager.set() instead.
      - 
       return-value: void
       name: startActivities(Intent[] intents, Bundle options)
       description: Launch multiple new activities.
      - 
       return-value: void
       name: startActivities(Intent[] intents)
       description: Same as startActivities(Intent[], Bundle) with no options specified.
      - 
       return-value: void
       name: startActivity(Intent intent)
       description: Same as startActivity(Intent, Bundle) with no options specified.
      - 
       return-value: void
       name: startActivity(Intent intent, Bundle options)
       description: Launch a new activity.
      - 
       return-value: ComponentName
       name: startForegroundService(Intent service)
       description: Similar to startService(Intent), but with an implicit promise that the Service will call startForeground(int, android.app.Notification) once it begins running.
      - 
       return-value: boolean
       name: startInstrumentation(ComponentName className, String profileFile, Bundle arguments)
       description: Start executing an Instrumentation class.
      - 
       return-value: void
       name: startIntentSender(IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
       description: Same as startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options specified.
      - 
       return-value: void
       name: startIntentSender(IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)
       description: Like startActivity(Intent, Bundle), but taking a IntentSender to start.
      - 
       return-value: ComponentName
       name: startService(Intent service)
       description: Request that a given application service be started.
      - 
       return-value: boolean
       name: stopService(Intent name)
       description: Request that a given application service be stopped.
      - 
       return-value: void
       name: unbindService(ServiceConnection conn)
       description: Disconnect from an application service.
      - 
       return-value: void
       name: unregisterReceiver(BroadcastReceiver receiver)
       description: Unregister a previously registered BroadcastReceiver.
  name: android.content.Context
     method: 
      - 
       return-value: abstract boolean
       name: bindService(Intent service, ServiceConnection conn, int flags)
       description: Connect to an application service, creating it if needed.
      - 
       return-value: abstract int
       name: checkCallingOrSelfPermission(String permission)
       description: Determine whether the calling process of an IPC or you have been granted a particular permission.
      - 
       return-value: abstract int
       name: checkCallingOrSelfUriPermission(Uri uri, int modeFlags)
       description: Determine whether the calling process of an IPC or you has been granted permission to access a specific URI.
      - 
       return-value: abstract int
       name: checkCallingPermission(String permission)
       description: Determine whether the calling process of an IPC you are handling has been granted a particular permission.
      - 
       return-value: abstract int
       name: checkCallingUriPermission(Uri uri, int modeFlags)
       description: Determine whether the calling process and user ID has been granted permission to access a specific URI.
      - 
       return-value: abstract int
       name: checkPermission(String permission, int pid, int uid)
       description: Determine whether the given permission is allowed for a particular process and user ID running in the system.
      - 
       return-value: abstract int
       name: checkSelfPermission(String permission)
       description: Determine whether you have been granted a particular permission.
      - 
       return-value: abstract int
       name: checkUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags)
       description: Check both a Uri and normal permission.
      - 
       return-value: abstract int
       name: checkUriPermission(Uri uri, int pid, int uid, int modeFlags)
       description: Determine whether a particular process and user ID has been granted permission to access a specific URI.
      - 
       return-value: abstract void
       name: clearWallpaper()
       description: This method was deprecated in API level 5. Use WallpaperManager.clear() instead.
      - 
       return-value: abstract Context
       name: createConfigurationContext(Configuration overrideConfiguration)
       description: Return a new Context object for the current Context but whose resources are adjusted to match the given Configuration.
      - 
       return-value: abstract Context
       name: createContextForSplit(String splitName)
       description: Return a new Context object for the given split name.
      - 
       return-value: abstract Context
       name: createDeviceProtectedStorageContext()
       description: Return a new Context object for the current Context but whose storage APIs are backed by device-protected storage.
      - 
       return-value: abstract Context
       name: createDisplayContext(Display display)
       description: Return a new Context object for the current Context but whose resources are adjusted to match the metrics of the given Display.
      - 
       return-value: abstract Context
       name: createPackageContext(String packageName, int flags)
       description: Return a new Context object for the given application name.
      - 
       return-value: abstract String[]
       name: databaseList()
       description: Returns an array of strings naming the private databases associated with this Context's application package.
      - 
       return-value: abstract boolean
       name: deleteDatabase(String name)
       description: Delete an existing private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: abstract boolean
       name: deleteFile(String name)
       description: Delete the given private file associated with this Context's application package.
      - 
       return-value: abstract boolean
       name: deleteSharedPreferences(String name)
       description: Delete an existing shared preferences file.
      - 
       return-value: abstract void
       name: enforceCallingOrSelfPermission(String permission, String message)
       description: If neither you nor the calling process of an IPC you are handling has been granted a particular permission, throw a SecurityException.
      - 
       return-value: abstract void
       name: enforceCallingOrSelfUriPermission(Uri uri, int modeFlags, String message)
       description: If the calling process of an IPC or you has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: abstract void
       name: enforceCallingPermission(String permission, String message)
       description: If the calling process of an IPC you are handling has not been granted a particular permission, throw a SecurityException.
      - 
       return-value: abstract void
       name: enforceCallingUriPermission(Uri uri, int modeFlags, String message)
       description: If the calling process and user ID has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: abstract void
       name: enforcePermission(String permission, int pid, int uid, String message)
       description: If the given permission is not allowed for a particular process and user ID running in the system, throw a SecurityException.
      - 
       return-value: abstract void
       name: enforceUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags, String message)
       description: Enforce both a Uri and normal permission.
      - 
       return-value: abstract void
       name: enforceUriPermission(Uri uri, int pid, int uid, int modeFlags, String message)
       description: If a particular process and user ID has not been granted permission to access a specific URI, throw SecurityException.
      - 
       return-value: abstract String[]
       name: fileList()
       description: Returns an array of strings naming the private files associated with this Context's application package.
      - 
       return-value: abstract Context
       name: getApplicationContext()
       description: Return the context of the single, global Application object of the current process.
      - 
       return-value: abstract ApplicationInfo
       name: getApplicationInfo()
       description: Return the full application info for this context's package.
      - 
       return-value: abstract AssetManager
       name: getAssets()
       description: Returns an AssetManager instance for the application's package.
      - 
       return-value: abstract File
       name: getCacheDir()
       description: Returns the absolute path to the application specific cache directory on the filesystem.
      - 
       return-value: abstract ClassLoader
       name: getClassLoader()
       description: Return a class loader you can use to retrieve classes in this package.
      - 
       return-value: abstract File
       name: getCodeCacheDir()
       description: Returns the absolute path to the application specific cache directory on the filesystem designed for storing cached code.
      - 
       return-value: final int
       name: getColor(int id)
       description: Returns a color associated with a particular resource ID and styled for the current theme.
      - 
       return-value: final ColorStateList
       name: getColorStateList(int id)
       description: Returns a color state list associated with a particular resource ID and styled for the current theme.
      - 
       return-value: abstract ContentResolver
       name: getContentResolver()
       description: Return a ContentResolver instance for your application's package.
      - 
       return-value: abstract File
       name: getDataDir()
       description: Returns the absolute path to the directory on the filesystem where all private files belonging to this app are stored.
      - 
       return-value: abstract File
       name: getDatabasePath(String name)
       description: Returns the absolute path on the filesystem where a database created with openOrCreateDatabase(String, int, SQLiteDatabase.CursorFactory) is stored.
      - 
       return-value: abstract File
       name: getDir(String name, int mode)
       description: Retrieve, creating if needed, a new directory in which the application can place its own custom data files.
      - 
       return-value: final Drawable
       name: getDrawable(int id)
       description: Returns a drawable object associated with a particular resource ID and styled for the current theme.
      - 
       return-value: abstract File
       name: getExternalCacheDir()
       description: Returns absolute path to application-specific directory on the primary shared/external storage device where the application can place cache files it owns.
      - 
       return-value: abstract File[]
       name: getExternalCacheDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place cache files it owns.
      - 
       return-value: abstract File
       name: getExternalFilesDir(String type)
       description: Returns the absolute path to the directory on the primary shared/external storage device where the application can place persistent files it owns.
      - 
       return-value: abstract File[]
       name: getExternalFilesDirs(String type)
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place persistent files it owns.
      - 
       return-value: abstract File[]
       name: getExternalMediaDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application can place media files.
      - 
       return-value: abstract File
       name: getFileStreamPath(String name)
       description: Returns the absolute path on the filesystem where a file created with openFileOutput(String, int) is stored.
      - 
       return-value: abstract File
       name: getFilesDir()
       description: Returns the absolute path to the directory on the filesystem where files created with openFileOutput(String, int) are stored.
      - 
       return-value: Executor
       name: getMainExecutor()
       description: Return an Executor that will run enqueued tasks on the main thread associated with this context.
      - 
       return-value: abstract Looper
       name: getMainLooper()
       description: Return the Looper for the main thread of the current process.
      - 
       return-value: abstract File
       name: getNoBackupFilesDir()
       description: Returns the absolute path to the directory on the filesystem similar to getFilesDir().
      - 
       return-value: abstract File
       name: getObbDir()
       description: Return the primary shared/external storage directory where this application's OBB files (if there are any) can be found.
      - 
       return-value: abstract File[]
       name: getObbDirs()
       description: Returns absolute paths to application-specific directories on all shared/external storage devices where the application's OBB files (if there are any) can be found.
      - 
       return-value: abstract String
       name: getPackageCodePath()
       description: Return the full path to this context's primary Android package.
      - 
       return-value: abstract PackageManager
       name: getPackageManager()
       description: Return PackageManager instance to find global package information.
      - 
       return-value: abstract String
       name: getPackageName()
       description: Return the name of this application's package.
      - 
       return-value: abstract String
       name: getPackageResourcePath()
       description: Return the full path to this context's primary Android package.
      - 
       return-value: abstract Resources
       name: getResources()
       description: Returns a Resources instance for the application's package.
      - 
       return-value: abstract SharedPreferences
       name: getSharedPreferences(String name, int mode)
       description: Retrieve and hold the contents of the preferences file 'name', returning a SharedPreferences through which you can retrieve and modify its values.
      - 
       return-value: final String
       name: getString(int resId, Object... formatArgs)
       description: Returns a localized formatted string from the application's package's default string table, substituting the format arguments as defined in Formatter and String.format(String, Object...).
      - 
       return-value: final String
       name: getString(int resId)
       description: Returns a localized string from the application's package's default string table.
      - 
       return-value: final <T> T
       name: getSystemService(Class<T> serviceClass)
       description: Return the handle to a system-level service by class.
      - 
       return-value: abstract Object
       name: getSystemService(String name)
       description: Return the handle to a system-level service by name.
      - 
       return-value: abstract String
       name: getSystemServiceName(Class<?> serviceClass)
       description: Gets the name of the system-level service that is represented by the specified class.
      - 
       return-value: final CharSequence
       name: getText(int resId)
       description: Return a localized, styled CharSequence from the application's package's default string table.
      - 
       return-value: abstract Resources.Theme
       name: getTheme()
       description: Return the Theme object associated with this Context.
      - 
       return-value: abstract Drawable
       name: getWallpaper()
       description: This method was deprecated in API level 5. Use WallpaperManager.get() instead.
      - 
       return-value: abstract int
       name: getWallpaperDesiredMinimumHeight()
       description: This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumHeight() instead.
      - 
       return-value: abstract int
       name: getWallpaperDesiredMinimumWidth()
       description: This method was deprecated in API level 5. Use WallpaperManager.getDesiredMinimumWidth() instead.
      - 
       return-value: abstract void
       name: grantUriPermission(String toPackage, Uri uri, int modeFlags)
       description: Grant permission to access a specific Uri to another package, regardless of whether that package has general permission to access the Uri's content provider.
      - 
       return-value: abstract boolean
       name: isDeviceProtectedStorage()
       description: Indicates if the storage APIs of this Context are backed by device-protected storage.
      - 
       return-value: boolean
       name: isRestricted()
       description: Indicates whether this Context is restricted.
      - 
       return-value: abstract boolean
       name: moveDatabaseFrom(Context sourceContext, String name)
       description: Move an existing database file from the given source storage context to this context.
      - 
       return-value: abstract boolean
       name: moveSharedPreferencesFrom(Context sourceContext, String name)
       description: Move an existing shared preferences file from the given source storage context to this context.
      - 
       return-value: final TypedArray
       name: obtainStyledAttributes(AttributeSet set, int[] attrs)
       description: Retrieve styled attribute information in this Context's theme.
      - 
       return-value: final TypedArray
       name: obtainStyledAttributes(AttributeSet set, int[] attrs, int defStyleAttr, int defStyleRes)
       description: Retrieve styled attribute information in this Context's theme.
      - 
       return-value: final TypedArray
       name: obtainStyledAttributes(int resid, int[] attrs)
       description: Retrieve styled attribute information in this Context's theme.
      - 
       return-value: final TypedArray
       name: obtainStyledAttributes(int[] attrs)
       description: Retrieve styled attribute information in this Context's theme.
      - 
       return-value: abstract FileInputStream
       name: openFileInput(String name)
       description: Open a private file associated with this Context's application package for reading.
      - 
       return-value: abstract FileOutputStream
       name: openFileOutput(String name, int mode)
       description: Open a private file associated with this Context's application package for writing.
      - 
       return-value: abstract SQLiteDatabase
       name: openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory, DatabaseErrorHandler errorHandler)
       description: Open a new private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: abstract SQLiteDatabase
       name: openOrCreateDatabase(String name, int mode, SQLiteDatabase.CursorFactory factory)
       description: Open a new private SQLiteDatabase associated with this Context's application package.
      - 
       return-value: abstract Drawable
       name: peekWallpaper()
       description: This method was deprecated in API level 5. Use WallpaperManager.peek() instead.
      - 
       return-value: void
       name: registerComponentCallbacks(ComponentCallbacks callback)
       description: Add a new ComponentCallbacks to the base application of the Context, which will be called at the same times as the ComponentCallbacks methods of activities and other components are called.
      - 
       return-value: abstract Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter)
       description: Register a BroadcastReceiver to be run in the main activity thread.
      - 
       return-value: abstract Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, int flags)
       description: Register to receive intent broadcasts, with the receiver optionally being exposed to Instant Apps.
      - 
       return-value: abstract Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler, int flags)
       description: Register to receive intent broadcasts, to run in the context of scheduler.
      - 
       return-value: abstract Intent
       name: registerReceiver(BroadcastReceiver receiver, IntentFilter filter, String broadcastPermission, Handler scheduler)
       description: Register to receive intent broadcasts, to run in the context of scheduler.
      - 
       return-value: abstract void
       name: removeStickyBroadcast(Intent intent)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: removeStickyBroadcastAsUser(Intent intent, UserHandle user)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: revokeUriPermission(Uri uri, int modeFlags)
       description: Remove all permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int) or any other mechanism.
      - 
       return-value: abstract void
       name: revokeUriPermission(String toPackage, Uri uri, int modeFlags)
       description: Remove permissions to access a particular content provider Uri that were previously added with grantUriPermission(String, Uri, int) for a specific target package.
      - 
       return-value: abstract void
       name: sendBroadcast(Intent intent, String receiverPermission)
       description: Broadcast the given intent to all interested BroadcastReceivers, allowing an optional required permission to be enforced.
      - 
       return-value: abstract void
       name: sendBroadcast(Intent intent)
       description: Broadcast the given intent to all interested BroadcastReceivers.
      - 
       return-value: abstract void
       name: sendBroadcastAsUser(Intent intent, UserHandle user)
       description: Version of sendBroadcast(Intent) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: abstract void
       name: sendBroadcastAsUser(Intent intent, UserHandle user, String receiverPermission)
       description: Version of sendBroadcast(Intent, String) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: abstract void
       name: sendOrderedBroadcast(Intent intent, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: Version of sendBroadcast(Intent) that allows you to receive data back from the broadcast.
      - 
       return-value: abstract void
       name: sendOrderedBroadcast(Intent intent, String receiverPermission)
       description: Broadcast the given intent to all interested BroadcastReceivers, delivering them one at a time to allow more preferred receivers to consume the broadcast before it is delivered to less preferred receivers.
      - 
       return-value: abstract void
       name: sendOrderedBroadcastAsUser(Intent intent, UserHandle user, String receiverPermission, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: Version of sendOrderedBroadcast(Intent, String, BroadcastReceiver, Handler, int, String, Bundle) that allows you to specify the user the broadcast will be sent to.
      - 
       return-value: abstract void
       name: sendStickyBroadcast(Intent intent)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: sendStickyBroadcastAsUser(Intent intent, UserHandle user)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: sendStickyOrderedBroadcast(Intent intent, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: sendStickyOrderedBroadcastAsUser(Intent intent, UserHandle user, BroadcastReceiver resultReceiver, Handler scheduler, int initialCode, String initialData, Bundle initialExtras)
       description: This method was deprecated in API level 21. Sticky broadcasts should not be used. They provide no security (anyone can access them), no protection (anyone can modify them), and many other problems. The recommended pattern is to use a non-sticky broadcast to report that something has changed, with another mechanism for apps to retrieve the current value whenever desired.
      - 
       return-value: abstract void
       name: setTheme(int resid)
       description: Set the base theme for this context.
      - 
       return-value: abstract void
       name: setWallpaper(Bitmap bitmap)
       description: This method was deprecated in API level 5. Use WallpaperManager.set() instead.
      - 
       return-value: abstract void
       name: setWallpaper(InputStream data)
       description: This method was deprecated in API level 5. Use WallpaperManager.set() instead.
      - 
       return-value: abstract void
       name: startActivities(Intent[] intents, Bundle options)
       description: Launch multiple new activities.
      - 
       return-value: abstract void
       name: startActivities(Intent[] intents)
       description: Same as startActivities(Intent[], Bundle) with no options specified.
      - 
       return-value: abstract void
       name: startActivity(Intent intent)
       description: Same as startActivity(Intent, Bundle) with no options specified.
      - 
       return-value: abstract void
       name: startActivity(Intent intent, Bundle options)
       description: Launch a new activity.
      - 
       return-value: abstract ComponentName
       name: startForegroundService(Intent service)
       description: Similar to startService(Intent), but with an implicit promise that the Service will call startForeground(int, android.app.Notification) once it begins running.
      - 
       return-value: abstract boolean
       name: startInstrumentation(ComponentName className, String profileFile, Bundle arguments)
       description: Start executing an Instrumentation class.
      - 
       return-value: abstract void
       name: startIntentSender(IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags)
       description: Same as startIntentSender(IntentSender, Intent, int, int, int, Bundle) with no options specified.
      - 
       return-value: abstract void
       name: startIntentSender(IntentSender intent, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options)
       description: Like startActivity(Intent, Bundle), but taking a IntentSender to start.
      - 
       return-value: abstract ComponentName
       name: startService(Intent service)
       description: Request that a given application service be started.
      - 
       return-value: abstract boolean
       name: stopService(Intent service)
       description: Request that a given application service be stopped.
      - 
       return-value: abstract void
       name: unbindService(ServiceConnection conn)
       description: Disconnect from an application service.
      - 
       return-value: void
       name: unregisterComponentCallbacks(ComponentCallbacks callback)
       description: Remove a ComponentCallbacks object that was previously registered with registerComponentCallbacks(ComponentCallbacks).
      - 
       return-value: abstract void
       name: unregisterReceiver(BroadcastReceiver receiver)
       description: Unregister a previously registered BroadcastReceiver.
  name: java.lang.Object
     method: 
      - 
       return-value: Object
       name: clone()
       description: Creates and returns a copy of this object.
      - 
       return-value: boolean
       name: equals(Object obj)
       description: Indicates whether some other object is "equal to" this one.
      - 
       return-value: void
       name: finalize()
       description: Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
      - 
       return-value: final Class<?>
       name: getClass()
       description: Returns the runtime class of this Object.
      - 
       return-value: int
       name: hashCode()
       description: Returns a hash code value for the object.
      - 
       return-value: final void
       name: notify()
       description: Wakes up a single thread that is waiting on this object's monitor.
      - 
       return-value: final void
       name: notifyAll()
       description: Wakes up all threads that are waiting on this object's monitor.
      - 
       return-value: String
       name: toString()
       description: Returns a string representation of the object.
      - 
       return-value: final void
       name: wait(long millis, int nanos)
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.
      - 
       return-value: final void
       name: wait(long millis)
       description: Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
      - 
       return-value: final void
       name: wait()
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.
  name: android.content.ComponentCallbacks2
     method: 
       return-value: abstract void
       name: onTrimMemory(int level)
       description: Called when the operating system has determined that it is a good time for a process to trim unneeded memory from its process.
  name: android.content.ComponentCallbacks
     method: 
      - 
       return-value: abstract void
       name: onConfigurationChanged(Configuration newConfig)
       description: Called by the system when the device configuration changes while your component is running.
      - 
       return-value: abstract void
       name: onLowMemory()
       description: This is called when the overall system is running low on memory, and actively running processes should trim their memory usage.
 public_constructors: 
  method: 
    name: RemoteViewsService()
 public_methods: 
  method: 
   - 
    return-value: IBinder
    name: onBind(Intent intent)
    description: Return the communication channel to the service.
   - 
    return-value: abstract RemoteViewsService.RemoteViewsFactory
    name: onGetViewFactory(Intent intent)
    description: To be implemented by the derived service to generate appropriate factories for the data.
 api-section: 
  api: 
   - 
    name: RemoteViewsService
    api_level: API level 11
    api_signature: public RemoteViewsService ()
    description: 
   - 
    name: onBind
    api_level: API level 11
    api_signature: public IBinder onBind (Intent intent)
    description: Return the communication channel to the service. May return null if clients can not bind to the service. The returned IBinder is usually for a complex interface that has been described using aidl.
     parameters: 
      parameter: 
       - 
        name: intent
        description: Intent: The Intent that was used to bind to this service, as given to Context.bindService. Note that any extras that were included with the Intent at that point will not be seen here.
       - 
        name: IBinder
        description: Return an IBinder through which clients can call on to the service.
   - 
    name: onGetViewFactory
    api_level: API level 11
    api_signature: public abstract RemoteViewsService.RemoteViewsFactory onGetViewFactory (Intent intent)
    description: To be implemented by the derived service to generate appropriate factories for the data.
     parameters: 
      parameter: 
       - 
        name: intent
        description: Intent
       - 
        name: RemoteViewsService.RemoteViewsFactory
        description: 