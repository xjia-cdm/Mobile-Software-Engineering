api:
 title: RelativeLayout.LayoutParams
 api-signature: public static class RelativeLayout.LayoutParams extends ViewGroup.MarginLayoutParams
 inheritance: java.lang.Object ↳ android.view.ViewGroup.LayoutParams ↳ android.view.ViewGroup.MarginLayoutParams ↳ android.widget.RelativeLayout.LayoutParams
 subclasses-direct-summary: 
 subclasses-indirect-summary: 
 inherited_xml_attributes: 
  class: 
   - 
    name: android.view.ViewGroup.MarginLayoutParams
     class: 
      - 
       attirbute: 
        name: android:layout_margin
      - 
       attirbute: 
        name: android:layout_marginBottom
      - 
       attirbute: 
        name: android:layout_marginEnd
      - 
       attirbute: 
        name: android:layout_marginHorizontal
      - 
       attirbute: 
        name: android:layout_marginLeft
      - 
       attirbute: 
        name: android:layout_marginRight
      - 
       attirbute: 
        name: android:layout_marginStart
      - 
       attirbute: 
        name: android:layout_marginTop
      - 
       attirbute: 
        name: android:layout_marginVertical
   - 
    name: android.view.ViewGroup.LayoutParams
     class: 
      - 
       attirbute: 
        name: android:layout_height
      - 
       attirbute: 
        name: android:layout_width
 inherited_constants: 
  class: 
    name: android.view.ViewGroup.LayoutParams
     conctant: 
      - 
       type: int
       name: FILL_PARENT
       description:Special value for the height or width requested by a View.
      - 
       type: int
       name: MATCH_PARENT
       description:Special value for the height or width requested by a View.
      - 
       type: int
       name: WRAP_CONTENT
       description:Special value for the height or width requested by a View.
 inherited_fields: 
  class: 
   - 
    name: android.view.ViewGroup.MarginLayoutParams
     field: 
      - 
       type: public int
       name: bottomMargin
       description: The bottom margin in pixels of the child.
      - 
       type: public int
       name: leftMargin
       description: The left margin in pixels of the child.
      - 
       type: public int
       name: rightMargin
       description: The right margin in pixels of the child.
      - 
       type: public int
       name: topMargin
       description: The top margin in pixels of the child.
   - 
    name: android.view.ViewGroup.LayoutParams
     field: 
      - 
       type: public int
       name: height
       description: Information about how tall the view wants to be.
      - 
       type: public LayoutAnimationController.AnimationParameters
       name: layoutAnimationParameters
       description: Used to animate layouts.
      - 
       type: public int
       name: width
       description: Information about how wide the view wants to be.
 inherited_methods: 
  name: android.view.ViewGroup.MarginLayoutParams
   class: 
     method: 
      - 
       return-value: int
       name: getLayoutDirection()
       description: Retuns the layout direction.
      - 
       return-value: int
       name: getMarginEnd()
       description: Returns the end margin in pixels.
      - 
       return-value: int
       name: getMarginStart()
       description: Returns the start margin in pixels.
      - 
       return-value: boolean
       name: isMarginRelative()
       description: Check if margins are relative.
      - 
       return-value: void
       name: resolveLayoutDirection(int layoutDirection)
       description: This will be called by View.requestLayout().
      - 
       return-value: void
       name: setLayoutDirection(int layoutDirection)
       description: Set the layout direction
      - 
       return-value: void
       name: setMarginEnd(int end)
       description: Sets the relative end margin.
      - 
       return-value: void
       name: setMarginStart(int start)
       description: Sets the relative start margin.
      - 
       return-value: void
       name: setMargins(int left, int top, int right, int bottom)
       description: Sets the margins, in pixels.
  name: android.view.ViewGroup.LayoutParams
     method: 
      - 
       return-value: void
       name: resolveLayoutDirection(int layoutDirection)
       description: Resolve layout parameters depending on the layout direction.
      - 
       return-value: void
       name: setBaseAttributes(TypedArray a, int widthAttr, int heightAttr)
       description: Extracts the layout parameters from the supplied attributes.
  name: java.lang.Object
     method: 
      - 
       return-value: Object
       name: clone()
       description: Creates and returns a copy of this object.
      - 
       return-value: boolean
       name: equals(Object obj)
       description: Indicates whether some other object is "equal to" this one.
      - 
       return-value: void
       name: finalize()
       description: Called by the garbage collector on an object when garbage collection determines that there are no more references to the object.
      - 
       return-value: final Class<?>
       name: getClass()
       description: Returns the runtime class of this Object.
      - 
       return-value: int
       name: hashCode()
       description: Returns a hash code value for the object.
      - 
       return-value: final void
       name: notify()
       description: Wakes up a single thread that is waiting on this object's monitor.
      - 
       return-value: final void
       name: notifyAll()
       description: Wakes up all threads that are waiting on this object's monitor.
      - 
       return-value: String
       name: toString()
       description: Returns a string representation of the object.
      - 
       return-value: final void
       name: wait(long millis, int nanos)
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object, or some other thread interrupts the current thread, or a certain amount of real time has elapsed.
      - 
       return-value: final void
       name: wait(long millis)
       description: Causes the current thread to wait until either another thread invokes the notify() method or the notifyAll() method for this object, or a specified amount of time has elapsed.
      - 
       return-value: final void
       name: wait()
       description: Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object.
 public_constructors: 
  method: 
   - 
    name: RelativeLayout.LayoutParams(Context c, AttributeSet attrs)
   - 
    name: RelativeLayout.LayoutParams(int w, int h)
   - 
    name: RelativeLayout.LayoutParams(ViewGroup.LayoutParams source)
    description: 
   - 
    name: RelativeLayout.LayoutParams(ViewGroup.MarginLayoutParams source)
    description: 
   - 
    name: RelativeLayout.LayoutParams(RelativeLayout.LayoutParams source)
    description: Copy constructor.
 public_methods: 
  method: 
   - 
    return-value: void
    name: addRule(int verb, int subject)
    description: Adds a layout rule to be interpreted by the RelativeLayout.
   - 
    return-value: void
    name: addRule(int verb)
    description: Adds a layout rule to be interpreted by the RelativeLayout.
   - 
    return-value: String
    name: debug(String output)
    description: Returns a String representation of this set of layout parameters.
   - 
    return-value: int
    name: getRule(int verb)
    description: Returns the layout rule associated with a specific verb.
   - 
    return-value: int[]
    name: getRules()
    description: Retrieves a complete list of all supported rules, where the index is the rule verb, and the element value is the value specified, or "false" if it was never set.
   - 
    return-value: void
    name: removeRule(int verb)
    description: Removes a layout rule to be interpreted by the RelativeLayout.
   - 
    return-value: void
    name: resolveLayoutDirection(int layoutDirection)
    description: This will be called by View.requestLayout() to resolve layout parameters that are relative to the layout direction.
 api-section: 
  api: 
   - 
    name: alignWithParent
    api_level: API level 1
    api_signature: public boolean alignWithParent
    description: When true, uses the parent as the anchor if the anchor doesn't exist or if the anchor's visibility is GONE.
   - 
    name: RelativeLayout.LayoutParams
    api_level: API level 1
    api_signature: public RelativeLayout.LayoutParams (Context c, 
                AttributeSet attrs)
    description: 
     parameters: 
      parameter: 
       - 
        name: c
        description: Context
       - 
        name: attrs
        description: AttributeSet
   - 
    name: RelativeLayout.LayoutParams
    api_level: API level 1
    api_signature: public RelativeLayout.LayoutParams (int w, 
                int h)
    description: 
     parameters: 
      parameter: 
       - 
        name: w
        description: int
       - 
        name: h
        description: int
   - 
    name: RelativeLayout.LayoutParams
    api_level: API level 1
    api_signature: public RelativeLayout.LayoutParams (ViewGroup.LayoutParams source)
    description: 
     parameters: 
      parameter: 
       - 
        name: source
        description: ViewGroup.LayoutParams
   - 
    name: RelativeLayout.LayoutParams
    api_level: API level 1
    api_signature: public RelativeLayout.LayoutParams (ViewGroup.MarginLayoutParams source)
    description: 
     parameters: 
      parameter: 
       - 
        name: source
        description: ViewGroup.MarginLayoutParams
   - 
    name: RelativeLayout.LayoutParams
    api_level: API level 19
    api_signature: public RelativeLayout.LayoutParams (RelativeLayout.LayoutParams source)
    description: Copy constructor. Clones the width, height, margin values, and rules of the source.
     parameters: 
      parameter: 
       - 
        name: source
        description: RelativeLayout.LayoutParams: The layout params to copy from.
   - 
    name: addRule
    api_level: API level 1
    api_signature: public void addRule (int verb, 
                int subject)
    description: Adds a layout rule to be interpreted by the RelativeLayout.
     parameters: 
      parameter: 
       - 
        name: verb
        description: int: a layout verb, such as RelativeLayout.ALIGN_RIGHT
       - 
        name: subject
        description: int: the ID of another view to use as an anchor, or a boolean value (represented as RelativeLayout.TRUE for true or 0 for false)
   - 
    name: addRule
    api_level: API level 1
    api_signature: public void addRule (int verb)
    description: Adds a layout rule to be interpreted by the RelativeLayout.
     parameters: 
      parameter: 
       - 
        name: verb
        description: int: a layout verb, such as RelativeLayout.ALIGN_PARENT_LEFT
   - 
    name: debug
    api_level: API level 1
    api_signature: public String debug (String output)
    description: Returns a String representation of this set of layout parameters.
     parameters: 
      parameter: 
       - 
        name: output
        description: String: the String to prepend to the internal representation
       - 
        name: String
        description: a String with the following format: output + "ViewGroup.LayoutParams={ width=WIDTH, height=HEIGHT }"
   - 
    name: getRule
    api_level: API level 23
    api_signature: public int getRule (int verb)
    description: Returns the layout rule associated with a specific verb.
     parameters: 
      parameter: 
       - 
        name: verb
        description: int: one of the verbs defined by RelativeLayout, such as ALIGN_WITH_PARENT_LEFT
       - 
        name: int
        description: the id of another view to use as an anchor, a boolean value (represented as RelativeLayout.TRUE for true or 0 for false), or -1 for verbs that don't refer to another sibling (for example, ALIGN_WITH_PARENT_BOTTOM)
   - 
    name: getRules
    api_level: API level 1
    api_signature: public int[] getRules ()
    description: Retrieves a complete list of all supported rules, where the index is the rule verb, and the element value is the value specified, or "false" if it was never set. There will be no resolution of relative rules done.
     parameters: 
      parameter: 
       - 
        name: int[]
        description: the supported rules
   - 
    name: removeRule
    api_level: API level 17
    api_signature: public void removeRule (int verb)
    description: Removes a layout rule to be interpreted by the RelativeLayout.
     parameters: 
      parameter: 
       - 
        name: verb
        description: int: One of the verbs defined by RelativeLayout, such as ALIGN_WITH_PARENT_LEFT.
   - 
    name: resolveLayoutDirection
    api_level: API level 17
    api_signature: public void resolveLayoutDirection (int layoutDirection)
    description: This will be called by View.requestLayout() to resolve layout parameters that are relative to the layout direction.
     parameters: 
      parameter: 
       - 
        name: layoutDirection
        description: int: the direction of the layout View.LAYOUT_DIRECTION_LTR View.LAYOUT_DIRECTION_RTL