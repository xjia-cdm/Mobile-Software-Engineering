<api>
<api-title>From class <code> android.widget.TextView </code>
 <code> android:autoLink </code>
 Controls whether links such as urls and email addresses are automatically found and converted to clickable links. <code> android:autoSizeMaxTextSize </code>
 The maximum text size constraint to be used when auto-sizing text. <code> android:autoSizeMinTextSize </code>
 The minimum text size constraint to be used when auto-sizing text. <code> android:autoSizePresetSizes </code>
 Resource array of dimensions to be used in conjunction with <code> autoSizeTextType </code>
 set to <code> uniform </code>
 . <code> android:autoSizeStepGranularity </code>
 Specify the auto-size step size if <code> autoSizeTextType </code>
 is set to <code> uniform </code>
 . <code> android:autoSizeTextType </code>
 Specify the type of auto-size. <code> android:autoText </code>
 If set, specifies that this TextView has a textual input method and automatically corrects some common spelling errors. <code> android:breakStrategy </code>
 Break strategy (control over paragraph layout). <code> android:bufferType </code>
 Determines the minimum type that getText() will return. <code> android:capitalize </code>
 If set, specifies that this TextView has a textual input method and should automatically capitalize what the user types. <code> android:cursorVisible </code>
 Makes the cursor visible (the default) or invisible. <code> android:digits </code>
 If set, specifies that this TextView has a numeric input method and that these specific characters are the ones that it will accept. <code> android:drawableBottom </code>
 The drawable to be drawn below the text. <code> android:drawableEnd </code>
 The drawable to be drawn to the end of the text. <code> android:drawableLeft </code>
 The drawable to be drawn to the left of the text. <code> android:drawablePadding </code>
 The padding between the drawables and the text. <code> android:drawableRight </code>
 The drawable to be drawn to the right of the text. <code> android:drawableStart </code>
 The drawable to be drawn to the start of the text. <code> android:drawableTint </code>
 Tint to apply to the compound (left, top, etc.) drawables. <code> android:drawableTintMode </code>
 Blending mode used to apply the compound (left, top, etc.) drawables tint. <code> android:drawableTop </code>
 The drawable to be drawn above the text. <code> android:editable </code>
 If set, specifies that this TextView has an input method. <code> android:editorExtras </code>
 Reference to an <code> &lt;input-extras&gt; </code>
 XML resource containing additional data to supply to an input method, which is private to the implementation of the input method. <code> android:elegantTextHeight </code>
 Elegant text height, especially for less compacted complex script text. <code> android:ellipsize </code>
 If set, causes words that are longer than the view is wide to be ellipsized instead of broken in the middle. <code> android:ems </code>
 Makes the TextView be exactly this many ems wide. <code> android:fallbackLineSpacing </code>
 Whether to respect the ascent and descent of the fallback fonts that are used in displaying the text. <code> android:firstBaselineToTopHeight </code>
 Distance from the top of the TextView to the first text baseline. <code> android:fontFamily </code>
 Font family (named by string or as a font resource reference) for the text. <code> android:fontFeatureSettings </code>
 Font feature settings. <code> android:freezesText </code>
 If set, the text view will include its current complete text inside of its frozen icicle in addition to meta-data such as the current cursor position. <code> android:gravity </code>
 Specifies how to align the text by the view's x- and/or y-axis when the text is smaller than the view. <code> android:height </code>
 Makes the TextView be exactly this tall. <code> android:hint </code>
 Hint text to display when the text is empty. <code> android:hyphenationFrequency </code>
 Frequency of automatic hyphenation. <code> android:imeActionId </code>
 Supply a value for <code> EditorInfo.actionId </code>
 used when an input method is connected to the text view. <code> android:imeActionLabel </code>
 Supply a value for <code> EditorInfo.actionLabel </code>
 used when an input method is connected to the text view. <code> android:imeOptions </code>
 Additional features you can enable in an IME associated with an editor to improve the integration with your application. <code> android:includeFontPadding </code>
 Leave enough room for ascenders and descenders instead of using the font ascent and descent strictly. <code> android:inputMethod </code>
 If set, specifies that this TextView should use the specified input method (specified by fully-qualified class name). <code> android:inputType </code>
 The type of data being placed in a text field, used to help an input method decide how to let the user enter text. <code> android:justificationMode </code>
 Mode for justification. <code> android:lastBaselineToBottomHeight </code>
 Distance from the bottom of the TextView to the last text baseline. <code> android:letterSpacing </code>
 Text letter-spacing. <code> android:lineHeight </code>
 Explicit height between lines of text. <code> android:lineSpacingExtra </code>
 Extra spacing between lines of text. <code> android:lineSpacingMultiplier </code>
 Extra spacing between lines of text, as a multiplier. <code> android:lines </code>
 Makes the TextView be exactly this many lines tall. <code> android:linksClickable </code>
 If set to false, keeps the movement method from being set to the link movement method even if autoLink causes links to be found. <code> android:marqueeRepeatLimit </code>
 The number of times to repeat the marquee animation. <code> android:maxEms </code>
 Makes the TextView be at most this many ems wide. <code> android:maxHeight </code>
 Makes the TextView be at most this many pixels tall. <code> android:maxLength </code>
 Set an input filter to constrain the text length to the specified number. <code> android:maxLines </code>
 Makes the TextView be at most this many lines tall. <code> android:maxWidth </code>
 Makes the TextView be at most this many pixels wide. <code> android:minEms </code>
 Makes the TextView be at least this many ems wide. <code> android:minHeight </code>
 Makes the TextView be at least this many pixels tall. <code> android:minLines </code>
 Makes the TextView be at least this many lines tall. <code> android:minWidth </code>
 Makes the TextView be at least this many pixels wide. <code> android:numeric </code>
 If set, specifies that this TextView has a numeric input method. <code> android:password </code>
 Whether the characters of the field are displayed as password dots instead of themselves. <code> android:phoneNumber </code>
 If set, specifies that this TextView has a phone number input method. <code> android:privateImeOptions </code>
 An addition content type description to supply to the input method attached to the text view, which is private to the implementation of the input method. <code> android:scrollHorizontally </code>
 Whether the text is allowed to be wider than the view (and therefore can be scrolled horizontally). <code> android:selectAllOnFocus </code>
 If the text is selectable, select it all when the view takes focus. <code> android:shadowColor </code>
 Place a blurred shadow of text underneath the text, drawn with the specified color. <code> android:shadowDx </code>
 Horizontal offset of the text shadow. <code> android:shadowDy </code>
 Vertical offset of the text shadow. <code> android:shadowRadius </code>
 Blur radius of the text shadow. <code> android:singleLine </code>
 Constrains the text to a single horizontally scrolling line instead of letting it wrap onto multiple lines, and advances focus instead of inserting a newline when you press the enter key. <code> android:text </code>
 Text to display. <code> android:textAllCaps </code>
 Present the text in ALL CAPS. <code> android:textAppearance </code>
 Base text color, typeface, size, and style. <code> android:textColor </code>
 Text color. <code> android:textColorHighlight </code>
 Color of the text selection highlight. <code> android:textColorHint </code>
 Color of the hint text. <code> android:textColorLink </code>
 Text color for links. <code> android:textIsSelectable </code>
 Indicates that the content of a non-editable text can be selected. <code> android:textScaleX </code>
 Sets the horizontal scaling factor for the text. <code> android:textSize </code>
 Size of the text. <code> android:textStyle </code>
 Style (normal, bold, italic, bold|italic) for the text. <code> android:typeface </code>
 Typeface (normal, sans, serif, monospace) for the text. <code> android:width </code>
 Makes the TextView be exactly this wide. TextView</api-title>
<api-signature>public class TextView extends View implements ViewTreeObserver.OnPreDrawListener</api-signature>
<super-class>java.lang.Object -> android.view.View -> android.widget.TextView</super-class>
<subclasses-direct>Button, CheckedTextView, Chronometer, DigitalClock, EditText, TextClock</subclasses-direct>
<subclasses-indirect>AutoCompleteTextView, CheckBox, CompoundButton, ExtractEditText, MultiAutoCompleteTextView, RadioButton, Switch, ToggleButton</subclasses-indirect>
<summary>From class <code> android.view.View </code> <code> android:accessibilityHeading </code> Whether or not this view is a heading for accessibility purposes. <code> android:accessibilityLiveRegion </code> Indicates to accessibility services whether the user should be notified when this view changes. <code> android:accessibilityTraversalAfter </code> Sets the id of a view after which this one is visited in accessibility traversal. <code> android:accessibilityTraversalBefore </code> Sets the id of a view before which this one is visited in accessibility traversal. <code> android:alpha </code> alpha property of the view, as a value between 0 (completely transparent) and 1 (completely opaque). <code> android:autofillHints </code> Describes the content of a view so that a autofill service can fill in the appropriate data. <code> android:autofilledHighlight </code> Drawable to be drawn over the view to mark it as autofilled May be a reference to another resource, in the form " <code> @[+][package:]type/name </code> " or a theme attribute in the form " <code> ?[package:]type/name </code> ". <code> android:background </code> A drawable to use as the background. <code> android:backgroundTint </code> Tint to apply to the background. <code> android:backgroundTintMode </code> Blending mode used to apply the background tint. <code> android:clickable </code> Defines whether this view reacts to click events. <code> android:contentDescription </code> Defines text that briefly describes content of the view. <code> android:contextClickable </code> Defines whether this view reacts to context click events. <code> android:defaultFocusHighlightEnabled </code> Whether this View should use a default focus highlight when it gets focused but doesn't have <code> R.attr.state_focused </code> defined in its background. <code> android:drawingCacheQuality </code> Defines the quality of translucent drawing caches. <code> android:duplicateParentState </code> When this attribute is set to true, the view gets its drawable state (focused, pressed, etc.) from its direct parent rather than from itself. <code> android:elevation </code> base z depth of the view. <code> android:fadeScrollbars </code> Defines whether to fade out scrollbars when they are not in use. <code> android:fadingEdgeLength </code> Defines the length of the fading edges. <code> android:filterTouchesWhenObscured </code> Specifies whether to filter touches when the view's window is obscured by another visible window. <code> android:fitsSystemWindows </code> Boolean internal attribute to adjust view layout based on system windows such as the status bar. <code> android:focusable </code> Controls whether a view can take focus. <code> android:focusableInTouchMode </code> Boolean that controls whether a view can take focus while in touch mode. <code> android:focusedByDefault </code> Whether this view is a default-focus view. <code> android:forceHasOverlappingRendering </code> Whether this view has elements that may overlap when drawn. <code> android:foreground </code> Defines the drawable to draw over the content. <code> android:foregroundGravity </code> Defines the gravity to apply to the foreground drawable. <code> android:foregroundTint </code> Tint to apply to the foreground. <code> android:foregroundTintMode </code> Blending mode used to apply the foreground tint. <code> android:hapticFeedbackEnabled </code> Boolean that controls whether a view should have haptic feedback enabled for events such as long presses. <code> android:id </code> Supply an identifier name for this view, to later retrieve it with <code> View.findViewById() </code> or <code> Activity.findViewById() </code> . <code> android:importantForAccessibility </code> Describes whether or not this view is important for accessibility. <code> android:importantForAutofill </code> Hints the Android System whether the view node associated with this View should be included in a view structure used for autofill purposes. <code> android:isScrollContainer </code> Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. <code> android:keepScreenOn </code> Controls whether the view's window should keep the screen on while visible. <code> android:keyboardNavigationCluster </code> Whether this view is a root of a keyboard navigation cluster. <code> android:layerType </code> Specifies the type of layer backing this view. <code> android:layoutDirection </code> Defines the direction of layout drawing. <code> android:longClickable </code> Defines whether this view reacts to long click events. <code> android:minHeight </code> Defines the minimum height of the view. <code> android:minWidth </code> Defines the minimum width of the view. <code> android:nextClusterForward </code> Defines the next keyboard navigation cluster. <code> android:nextFocusDown </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_DOWN </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusForward </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_FORWARD </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusLeft </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_LEFT </code> . <code> android:nextFocusRight </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_RIGHT </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusUp </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_UP </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:onClick </code> Name of the method in this View's context to invoke when the view is clicked. <code> android:outlineAmbientShadowColor </code> Sets the color of the ambient shadow that is drawn when the view has a positive Z or elevation value. <code> android:outlineSpotShadowColor </code> Sets the color of the spot shadow that is drawn when the view has a positive Z or elevation value. <code> android:padding </code> Sets the padding, in pixels, of all four edges. <code> android:paddingBottom </code> Sets the padding, in pixels, of the bottom edge; see <code> R.attr.padding </code> . <code> android:paddingEnd </code> Sets the padding, in pixels, of the end edge; see <code> R.attr.padding </code> . <code> android:paddingHorizontal </code> Sets the padding, in pixels, of the left and right edges; see <code> R.attr.padding </code> . <code> android:paddingLeft </code> Sets the padding, in pixels, of the left edge; see <code> R.attr.padding </code> . <code> android:paddingRight </code> Sets the padding, in pixels, of the right edge; see <code> R.attr.padding </code> . <code> android:paddingStart </code> Sets the padding, in pixels, of the start edge; see <code> R.attr.padding </code> . <code> android:paddingTop </code> Sets the padding, in pixels, of the top edge; see <code> R.attr.padding </code> . <code> android:paddingVertical </code> Sets the padding, in pixels, of the top and bottom edges; see <code> R.attr.padding </code> . <code> android:requiresFadingEdge </code> Defines which edges should be faded on scrolling. <code> android:rotation </code> rotation of the view, in degrees. <code> android:rotationX </code> rotation of the view around the x axis, in degrees. <code> android:rotationY </code> rotation of the view around the y axis, in degrees. <code> android:saveEnabled </code> If false, no state will be saved for this view when it is being frozen. <code> android:scaleX </code> scale of the view in the x direction. <code> android:scaleY </code> scale of the view in the y direction. <code> android:scrollIndicators </code> Defines which scroll indicators should be displayed when the view can be scrolled. <code> android:scrollX </code> The initial horizontal scroll offset, in pixels. <code> android:scrollY </code> The initial vertical scroll offset, in pixels. <code> android:scrollbarAlwaysDrawHorizontalTrack </code> Defines whether the horizontal scrollbar track should always be drawn. <code> android:scrollbarAlwaysDrawVerticalTrack </code> Defines whether the vertical scrollbar track should always be drawn. <code> android:scrollbarDefaultDelayBeforeFade </code> Defines the delay in milliseconds that a scrollbar waits before fade out. <code> android:scrollbarFadeDuration </code> Defines the delay in milliseconds that a scrollbar takes to fade out. <code> android:scrollbarSize </code> Sets the width of vertical scrollbars and height of horizontal scrollbars. <code> android:scrollbarStyle </code> Controls the scrollbar style and position. <code> android:scrollbarThumbHorizontal </code> Defines the horizontal scrollbar thumb drawable. <code> android:scrollbarThumbVertical </code> Defines the vertical scrollbar thumb drawable. <code> android:scrollbarTrackHorizontal </code> Defines the horizontal scrollbar track drawable. <code> android:scrollbarTrackVertical </code> Defines the vertical scrollbar track drawable. <code> android:scrollbars </code> Defines which scrollbars should be displayed on scrolling or not. <code> android:soundEffectsEnabled </code> Boolean that controls whether a view should have sound effects enabled for events such as clicking and touching. <code> android:stateListAnimator </code> Sets the state-based animator for the View. <code> android:tag </code> Supply a tag for this view containing a String, to be retrieved later with <code> View.getTag() </code> or searched for with <code> View.findViewWithTag() </code> . <code> android:textAlignment </code> Defines the alignment of the text. <code> android:textDirection </code> Defines the direction of the text. <code> android:theme </code> Specifies a theme override for a view. <code> android:tooltipText </code> Defines text displayed in a small popup window on hover or long press. <code> android:transformPivotX </code> x location of the pivot point around which the view will rotate and scale. <code> android:transformPivotY </code> y location of the pivot point around which the view will rotate and scale. <code> android:transitionName </code> Names a View such that it can be identified for Transitions. <code> android:translationX </code> translation in x of the view. <code> android:translationY </code> translation in y of the view. <code> android:translationZ </code> translation in z of the view. <code> android:visibility </code> Controls the initial visibility of the view.</summary>
</api>