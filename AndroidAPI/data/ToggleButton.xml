<api>
<api-title>From class <code> android.view.View </code>
 <code> android:accessibilityHeading </code>
 Whether or not this view is a heading for accessibility purposes. <code> android:accessibilityLiveRegion </code>
 Indicates to accessibility services whether the user should be notified when this view changes. <code> android:accessibilityTraversalAfter </code>
 Sets the id of a view after which this one is visited in accessibility traversal. <code> android:accessibilityTraversalBefore </code>
 Sets the id of a view before which this one is visited in accessibility traversal. <code> android:alpha </code>
 alpha property of the view, as a value between 0 (completely transparent) and 1 (completely opaque). <code> android:autofillHints </code>
 Describes the content of a view so that a autofill service can fill in the appropriate data. <code> android:autofilledHighlight </code>
 Drawable to be drawn over the view to mark it as autofilled May be a reference to another resource, in the form " <code> @[+][package:]type/name </code>
 " or a theme attribute in the form " <code> ?[package:]type/name </code>
 ". <code> android:background </code>
 A drawable to use as the background. <code> android:backgroundTint </code>
 Tint to apply to the background. <code> android:backgroundTintMode </code>
 Blending mode used to apply the background tint. <code> android:clickable </code>
 Defines whether this view reacts to click events. <code> android:contentDescription </code>
 Defines text that briefly describes content of the view. <code> android:contextClickable </code>
 Defines whether this view reacts to context click events. <code> android:defaultFocusHighlightEnabled </code>
 Whether this View should use a default focus highlight when it gets focused but doesn't have <code> R.attr.state_focused </code>
 defined in its background. <code> android:drawingCacheQuality </code>
 Defines the quality of translucent drawing caches. <code> android:duplicateParentState </code>
 When this attribute is set to true, the view gets its drawable state (focused, pressed, etc.) from its direct parent rather than from itself. <code> android:elevation </code>
 base z depth of the view. <code> android:fadeScrollbars </code>
 Defines whether to fade out scrollbars when they are not in use. <code> android:fadingEdgeLength </code>
 Defines the length of the fading edges. <code> android:filterTouchesWhenObscured </code>
 Specifies whether to filter touches when the view's window is obscured by another visible window. <code> android:fitsSystemWindows </code>
 Boolean internal attribute to adjust view layout based on system windows such as the status bar. <code> android:focusable </code>
 Controls whether a view can take focus. <code> android:focusableInTouchMode </code>
 Boolean that controls whether a view can take focus while in touch mode. <code> android:focusedByDefault </code>
 Whether this view is a default-focus view. <code> android:forceHasOverlappingRendering </code>
 Whether this view has elements that may overlap when drawn. <code> android:foreground </code>
 Defines the drawable to draw over the content. <code> android:foregroundGravity </code>
 Defines the gravity to apply to the foreground drawable. <code> android:foregroundTint </code>
 Tint to apply to the foreground. <code> android:foregroundTintMode </code>
 Blending mode used to apply the foreground tint. <code> android:hapticFeedbackEnabled </code>
 Boolean that controls whether a view should have haptic feedback enabled for events such as long presses. <code> android:id </code>
 Supply an identifier name for this view, to later retrieve it with <code> View.findViewById() </code>
 or <code> Activity.findViewById() </code>
 . <code> android:importantForAccessibility </code>
 Describes whether or not this view is important for accessibility. <code> android:importantForAutofill </code>
 Hints the Android System whether the view node associated with this View should be included in a view structure used for autofill purposes. <code> android:isScrollContainer </code>
 Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. <code> android:keepScreenOn </code>
 Controls whether the view's window should keep the screen on while visible. <code> android:keyboardNavigationCluster </code>
 Whether this view is a root of a keyboard navigation cluster. <code> android:layerType </code>
 Specifies the type of layer backing this view. <code> android:layoutDirection </code>
 Defines the direction of layout drawing. <code> android:longClickable </code>
 Defines whether this view reacts to long click events. <code> android:minHeight </code>
 Defines the minimum height of the view. <code> android:minWidth </code>
 Defines the minimum width of the view. <code> android:nextClusterForward </code>
 Defines the next keyboard navigation cluster. <code> android:nextFocusDown </code>
 Defines the next view to give focus to when the next focus is <code> View.FOCUS_DOWN </code>
 If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code>
 will result when the reference is accessed. <code> android:nextFocusForward </code>
 Defines the next view to give focus to when the next focus is <code> View.FOCUS_FORWARD </code>
 If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code>
 will result when the reference is accessed. <code> android:nextFocusLeft </code>
 Defines the next view to give focus to when the next focus is <code> View.FOCUS_LEFT </code>
 . <code> android:nextFocusRight </code>
 Defines the next view to give focus to when the next focus is <code> View.FOCUS_RIGHT </code>
 If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code>
 will result when the reference is accessed. <code> android:nextFocusUp </code>
 Defines the next view to give focus to when the next focus is <code> View.FOCUS_UP </code>
 If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code>
 will result when the reference is accessed. <code> android:onClick </code>
 Name of the method in this View's context to invoke when the view is clicked. <code> android:outlineAmbientShadowColor </code>
 Sets the color of the ambient shadow that is drawn when the view has a positive Z or elevation value. <code> android:outlineSpotShadowColor </code>
 Sets the color of the spot shadow that is drawn when the view has a positive Z or elevation value. <code> android:padding </code>
 Sets the padding, in pixels, of all four edges. <code> android:paddingBottom </code>
 Sets the padding, in pixels, of the bottom edge; see <code> R.attr.padding </code>
 . <code> android:paddingEnd </code>
 Sets the padding, in pixels, of the end edge; see <code> R.attr.padding </code>
 . <code> android:paddingHorizontal </code>
 Sets the padding, in pixels, of the left and right edges; see <code> R.attr.padding </code>
 . <code> android:paddingLeft </code>
 Sets the padding, in pixels, of the left edge; see <code> R.attr.padding </code>
 . <code> android:paddingRight </code>
 Sets the padding, in pixels, of the right edge; see <code> R.attr.padding </code>
 . <code> android:paddingStart </code>
 Sets the padding, in pixels, of the start edge; see <code> R.attr.padding </code>
 . <code> android:paddingTop </code>
 Sets the padding, in pixels, of the top edge; see <code> R.attr.padding </code>
 . <code> android:paddingVertical </code>
 Sets the padding, in pixels, of the top and bottom edges; see <code> R.attr.padding </code>
 . <code> android:requiresFadingEdge </code>
 Defines which edges should be faded on scrolling. <code> android:rotation </code>
 rotation of the view, in degrees. <code> android:rotationX </code>
 rotation of the view around the x axis, in degrees. <code> android:rotationY </code>
 rotation of the view around the y axis, in degrees. <code> android:saveEnabled </code>
 If false, no state will be saved for this view when it is being frozen. <code> android:scaleX </code>
 scale of the view in the x direction. <code> android:scaleY </code>
 scale of the view in the y direction. <code> android:scrollIndicators </code>
 Defines which scroll indicators should be displayed when the view can be scrolled. <code> android:scrollX </code>
 The initial horizontal scroll offset, in pixels. <code> android:scrollY </code>
 The initial vertical scroll offset, in pixels. <code> android:scrollbarAlwaysDrawHorizontalTrack </code>
 Defines whether the horizontal scrollbar track should always be drawn. <code> android:scrollbarAlwaysDrawVerticalTrack </code>
 Defines whether the vertical scrollbar track should always be drawn. <code> android:scrollbarDefaultDelayBeforeFade </code>
 Defines the delay in milliseconds that a scrollbar waits before fade out. <code> android:scrollbarFadeDuration </code>
 Defines the delay in milliseconds that a scrollbar takes to fade out. <code> android:scrollbarSize </code>
 Sets the width of vertical scrollbars and height of horizontal scrollbars. <code> android:scrollbarStyle </code>
 Controls the scrollbar style and position. <code> android:scrollbarThumbHorizontal </code>
 Defines the horizontal scrollbar thumb drawable. <code> android:scrollbarThumbVertical </code>
 Defines the vertical scrollbar thumb drawable. <code> android:scrollbarTrackHorizontal </code>
 Defines the horizontal scrollbar track drawable. <code> android:scrollbarTrackVertical </code>
 Defines the vertical scrollbar track drawable. <code> android:scrollbars </code>
 Defines which scrollbars should be displayed on scrolling or not. <code> android:soundEffectsEnabled </code>
 Boolean that controls whether a view should have sound effects enabled for events such as clicking and touching. <code> android:stateListAnimator </code>
 Sets the state-based animator for the View. <code> android:tag </code>
 Supply a tag for this view containing a String, to be retrieved later with <code> View.getTag() </code>
 or searched for with <code> View.findViewWithTag() </code>
 . <code> android:textAlignment </code>
 Defines the alignment of the text. <code> android:textDirection </code>
 Defines the direction of the text. <code> android:theme </code>
 Specifies a theme override for a view. <code> android:tooltipText </code>
 Defines text displayed in a small popup window on hover or long press. <code> android:transformPivotX </code>
 x location of the pivot point around which the view will rotate and scale. <code> android:transformPivotY </code>
 y location of the pivot point around which the view will rotate and scale. <code> android:transitionName </code>
 Names a View such that it can be identified for Transitions. <code> android:translationX </code>
 translation in x of the view. <code> android:translationY </code>
 translation in y of the view. <code> android:translationZ </code>
 translation in z of the view. <code> android:visibility </code>
 Controls the initial visibility of the view. ToggleButton</api-title>
<api-signature>public class ToggleButton extends CompoundButton</api-signature>
<super-class>java.lang.Object -> android.view.View -> android.widget.TextView -> android.widget.Button -> android.widget.CompoundButton -> android.widget.ToggleButton</super-class>
<subclasses-direct></subclasses-direct>
<subclasses-indirect></subclasses-indirect>
<summary>From class <code> android.view.View </code> <code> android:accessibilityHeading </code> Whether or not this view is a heading for accessibility purposes. <code> android:accessibilityLiveRegion </code> Indicates to accessibility services whether the user should be notified when this view changes. <code> android:accessibilityTraversalAfter </code> Sets the id of a view after which this one is visited in accessibility traversal. <code> android:accessibilityTraversalBefore </code> Sets the id of a view before which this one is visited in accessibility traversal. <code> android:alpha </code> alpha property of the view, as a value between 0 (completely transparent) and 1 (completely opaque). <code> android:autofillHints </code> Describes the content of a view so that a autofill service can fill in the appropriate data. <code> android:autofilledHighlight </code> Drawable to be drawn over the view to mark it as autofilled May be a reference to another resource, in the form " <code> @[+][package:]type/name </code> " or a theme attribute in the form " <code> ?[package:]type/name </code> ". <code> android:background </code> A drawable to use as the background. <code> android:backgroundTint </code> Tint to apply to the background. <code> android:backgroundTintMode </code> Blending mode used to apply the background tint. <code> android:clickable </code> Defines whether this view reacts to click events. <code> android:contentDescription </code> Defines text that briefly describes content of the view. <code> android:contextClickable </code> Defines whether this view reacts to context click events. <code> android:defaultFocusHighlightEnabled </code> Whether this View should use a default focus highlight when it gets focused but doesn't have <code> R.attr.state_focused </code> defined in its background. <code> android:drawingCacheQuality </code> Defines the quality of translucent drawing caches. <code> android:duplicateParentState </code> When this attribute is set to true, the view gets its drawable state (focused, pressed, etc.) from its direct parent rather than from itself. <code> android:elevation </code> base z depth of the view. <code> android:fadeScrollbars </code> Defines whether to fade out scrollbars when they are not in use. <code> android:fadingEdgeLength </code> Defines the length of the fading edges. <code> android:filterTouchesWhenObscured </code> Specifies whether to filter touches when the view's window is obscured by another visible window. <code> android:fitsSystemWindows </code> Boolean internal attribute to adjust view layout based on system windows such as the status bar. <code> android:focusable </code> Controls whether a view can take focus. <code> android:focusableInTouchMode </code> Boolean that controls whether a view can take focus while in touch mode. <code> android:focusedByDefault </code> Whether this view is a default-focus view. <code> android:forceHasOverlappingRendering </code> Whether this view has elements that may overlap when drawn. <code> android:foreground </code> Defines the drawable to draw over the content. <code> android:foregroundGravity </code> Defines the gravity to apply to the foreground drawable. <code> android:foregroundTint </code> Tint to apply to the foreground. <code> android:foregroundTintMode </code> Blending mode used to apply the foreground tint. <code> android:hapticFeedbackEnabled </code> Boolean that controls whether a view should have haptic feedback enabled for events such as long presses. <code> android:id </code> Supply an identifier name for this view, to later retrieve it with <code> View.findViewById() </code> or <code> Activity.findViewById() </code> . <code> android:importantForAccessibility </code> Describes whether or not this view is important for accessibility. <code> android:importantForAutofill </code> Hints the Android System whether the view node associated with this View should be included in a view structure used for autofill purposes. <code> android:isScrollContainer </code> Set this if the view will serve as a scrolling container, meaning that it can be resized to shrink its overall window so that there will be space for an input method. <code> android:keepScreenOn </code> Controls whether the view's window should keep the screen on while visible. <code> android:keyboardNavigationCluster </code> Whether this view is a root of a keyboard navigation cluster. <code> android:layerType </code> Specifies the type of layer backing this view. <code> android:layoutDirection </code> Defines the direction of layout drawing. <code> android:longClickable </code> Defines whether this view reacts to long click events. <code> android:minHeight </code> Defines the minimum height of the view. <code> android:minWidth </code> Defines the minimum width of the view. <code> android:nextClusterForward </code> Defines the next keyboard navigation cluster. <code> android:nextFocusDown </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_DOWN </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusForward </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_FORWARD </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusLeft </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_LEFT </code> . <code> android:nextFocusRight </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_RIGHT </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:nextFocusUp </code> Defines the next view to give focus to when the next focus is <code> View.FOCUS_UP </code> If the reference refers to a view that does not exist or is part of a hierarchy that is invisible, a <code> RuntimeException </code> will result when the reference is accessed. <code> android:onClick </code> Name of the method in this View's context to invoke when the view is clicked. <code> android:outlineAmbientShadowColor </code> Sets the color of the ambient shadow that is drawn when the view has a positive Z or elevation value. <code> android:outlineSpotShadowColor </code> Sets the color of the spot shadow that is drawn when the view has a positive Z or elevation value. <code> android:padding </code> Sets the padding, in pixels, of all four edges. <code> android:paddingBottom </code> Sets the padding, in pixels, of the bottom edge; see <code> R.attr.padding </code> . <code> android:paddingEnd </code> Sets the padding, in pixels, of the end edge; see <code> R.attr.padding </code> . <code> android:paddingHorizontal </code> Sets the padding, in pixels, of the left and right edges; see <code> R.attr.padding </code> . <code> android:paddingLeft </code> Sets the padding, in pixels, of the left edge; see <code> R.attr.padding </code> . <code> android:paddingRight </code> Sets the padding, in pixels, of the right edge; see <code> R.attr.padding </code> . <code> android:paddingStart </code> Sets the padding, in pixels, of the start edge; see <code> R.attr.padding </code> . <code> android:paddingTop </code> Sets the padding, in pixels, of the top edge; see <code> R.attr.padding </code> . <code> android:paddingVertical </code> Sets the padding, in pixels, of the top and bottom edges; see <code> R.attr.padding </code> . <code> android:requiresFadingEdge </code> Defines which edges should be faded on scrolling. <code> android:rotation </code> rotation of the view, in degrees. <code> android:rotationX </code> rotation of the view around the x axis, in degrees. <code> android:rotationY </code> rotation of the view around the y axis, in degrees. <code> android:saveEnabled </code> If false, no state will be saved for this view when it is being frozen. <code> android:scaleX </code> scale of the view in the x direction. <code> android:scaleY </code> scale of the view in the y direction. <code> android:scrollIndicators </code> Defines which scroll indicators should be displayed when the view can be scrolled. <code> android:scrollX </code> The initial horizontal scroll offset, in pixels. <code> android:scrollY </code> The initial vertical scroll offset, in pixels. <code> android:scrollbarAlwaysDrawHorizontalTrack </code> Defines whether the horizontal scrollbar track should always be drawn. <code> android:scrollbarAlwaysDrawVerticalTrack </code> Defines whether the vertical scrollbar track should always be drawn. <code> android:scrollbarDefaultDelayBeforeFade </code> Defines the delay in milliseconds that a scrollbar waits before fade out. <code> android:scrollbarFadeDuration </code> Defines the delay in milliseconds that a scrollbar takes to fade out. <code> android:scrollbarSize </code> Sets the width of vertical scrollbars and height of horizontal scrollbars. <code> android:scrollbarStyle </code> Controls the scrollbar style and position. <code> android:scrollbarThumbHorizontal </code> Defines the horizontal scrollbar thumb drawable. <code> android:scrollbarThumbVertical </code> Defines the vertical scrollbar thumb drawable. <code> android:scrollbarTrackHorizontal </code> Defines the horizontal scrollbar track drawable. <code> android:scrollbarTrackVertical </code> Defines the vertical scrollbar track drawable. <code> android:scrollbars </code> Defines which scrollbars should be displayed on scrolling or not. <code> android:soundEffectsEnabled </code> Boolean that controls whether a view should have sound effects enabled for events such as clicking and touching. <code> android:stateListAnimator </code> Sets the state-based animator for the View. <code> android:tag </code> Supply a tag for this view containing a String, to be retrieved later with <code> View.getTag() </code> or searched for with <code> View.findViewWithTag() </code> . <code> android:textAlignment </code> Defines the alignment of the text. <code> android:textDirection </code> Defines the direction of the text. <code> android:theme </code> Specifies a theme override for a view. <code> android:tooltipText </code> Defines text displayed in a small popup window on hover or long press. <code> android:transformPivotX </code> x location of the pivot point around which the view will rotate and scale. <code> android:transformPivotY </code> y location of the pivot point around which the view will rotate and scale. <code> android:transitionName </code> Names a View such that it can be identified for Transitions. <code> android:translationX </code> translation in x of the view. <code> android:translationY </code> translation in y of the view. <code> android:translationZ </code> translation in z of the view. <code> android:visibility </code> Controls the initial visibility of the view.</summary>
</api>